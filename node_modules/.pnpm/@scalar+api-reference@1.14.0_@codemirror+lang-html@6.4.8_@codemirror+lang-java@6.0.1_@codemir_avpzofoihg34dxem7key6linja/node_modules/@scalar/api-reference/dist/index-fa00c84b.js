import { defineComponent as b, ref as w, watch as I, openBlock as p, createElementBlock as g, Fragment as E, createElementVNode as U, unref as a, createTextVNode as d, createCommentVNode as S, renderSlot as k, createVNode as s, withCtx as u, toDisplayString as N, computed as D, isRef as B, normalizeClass as L, createBlock as T } from "vue";
import { o as j, H as R, E as H, U as O, u as F, f as A, _ as M, a as J, m as z, R as Q } from "./index-7cc1241a.js";
import { b as De } from "./index-7cc1241a.js";
import { useMediaQuery as W, useFileDialog as Y } from "@vueuse/core";
import "@headlessui/vue";
import "axios";
import "github-slugger";
import "@vcarl/remark-headings";
import "remark-parse";
import "remark-stringify";
import "unified";
import "js-yaml";
import "httpsnippet-lite";
import "unhead";
import "rehype-external-links";
import "rehype-format";
import "rehype-highlight";
import "rehype-sanitize";
import "rehype-stringify";
import "remark-gfm";
import "remark-rehype";
import "@floating-ui/vue";
import "fuse.js";
const q = (i) => {
  if (typeof i != "string")
    return !1;
  try {
    JSON.parse(i);
  } catch {
    return !1;
  }
  return !0;
}, G = { class: "swagger-editor-header" }, K = { class: "swagger-editor-title" }, P = { class: "swagger-editor-actions" }, X = { key: 0 }, Z = { key: 0 }, ee = { class: "swagger-editor-modal-layout" }, te = /* @__PURE__ */ b({
  __name: "SwaggerEditorHeader",
  props: {
    proxyUrl: {}
  },
  emits: ["import"],
  setup(i, { expose: v, emit: c }) {
    const o = i, e = W("(max-width: 1000px)"), { files: r, open: m, reset: C } = Y({
      multiple: !1,
      accept: ".json,.yaml,.yml"
    }), _ = j(), t = w(null);
    v({
      importUrlModal: _,
      openFileDialog: m
    });
    const f = w(""), h = () => {
      t.value = "", A(f.value, o.proxyUrl).then(async (n) => {
        c("import", n), _.hide();
      }).catch((n) => {
        console.error("[importUrl]", n), t.value = n;
      });
    };
    return I(r, () => {
      var n;
      if ((n = r.value) != null && n.length) {
        const l = r.value[0], y = new FileReader();
        y.onload = (V) => {
          var x;
          const $ = (x = V.target) == null ? void 0 : x.result;
          typeof $ == "string" && (c("import", $), C());
        }, y.readAsText(l);
      }
    }), (n, l) => (p(), g(E, null, [
      U("div", G, [
        U("div", K, [
          a(e) ? S("", !0) : (p(), g(E, { key: 0 }, [
            d("Swagger ")
          ], 64)),
          d("Editor ")
        ]),
        k(n.$slots, "tab-items", {}, void 0, !0),
        U("div", P, [
          s(R, {
            onClick: l[0] || (l[0] = () => a(m)())
          }, {
            default: u(() => [
              d(" Upload"),
              a(e) ? S("", !0) : (p(), g("span", X, " File"))
            ]),
            _: 1
          }),
          s(R, {
            onClick: l[1] || (l[1] = (y) => a(_).show())
          }, {
            default: u(() => [
              a(e) ? S("", !0) : (p(), g("span", Z, "Import ")),
              d("URL ")
            ]),
            _: 1
          })
        ])
      ]),
      s(a(H), {
        state: a(_),
        title: "Import Swagger from URL"
      }, {
        default: u(() => [
          U("div", ee, [
            s(a(O), {
              modelValue: f.value,
              "onUpdate:modelValue": l[2] || (l[2] = (y) => f.value = y),
              autofocus: "",
              class: "swagger-editor-modal-layout-input",
              label: "URL",
              labelShadowColor: "var(--theme-background-1, var(--default-theme-background-1))",
              placeholder: "https://scalar.com/swagger.json"
            }, null, 8, ["modelValue"]),
            d(" " + N(t.value) + " ", 1),
            s(a(F), {
              variant: "outlined",
              onClick: l[3] || (l[3] = (y) => a(_).hide())
            }, {
              default: u(() => [
                d(" Cancel ")
              ]),
              _: 1
            }),
            s(a(F), { onClick: h }, {
              default: u(() => [
                d("Import")
              ]),
              _: 1
            })
          ])
        ]),
        _: 1
      }, 8, ["state"])
    ], 64));
  }
}), re = /* @__PURE__ */ M(te, [["__scopeId", "data-v-17d421af"]]), oe = { class: "swagger-editor-input" }, ae = /* @__PURE__ */ b({
  __name: "SwaggerEditorInput",
  props: {
    value: {}
  },
  emits: ["contentUpdate"],
  setup(i, { expose: v }) {
    v({
      setCodeMirrorContent: (e) => {
        var r;
        (r = c.value) == null || r.setCodeMirrorContent(e);
      }
    });
    const c = w(null);
    function o(e) {
      return q(e) ? ["json"] : ["yaml"];
    }
    return (e, r) => (p(), g("div", oe, [
      s(a(J), {
        ref_key: "codeMirrorRef",
        ref: c,
        content: e.value,
        languages: o(e.value),
        lineNumbers: "",
        onChange: r[0] || (r[0] = (m) => e.$emit("contentUpdate", m))
      }, null, 8, ["content", "languages"])
    ]));
  }
}), ne = {}, se = { class: "swagger-editor-notification swagger-editor-notification--error" };
function le(i, v) {
  return p(), g("div", se, [
    k(i.$slots, "default")
  ]);
}
const ie = /* @__PURE__ */ M(ne, [["render", le]]), de = /* @__PURE__ */ b({
  __name: "SwaggerEditor",
  props: {
    value: {},
    theme: {},
    proxyUrl: {},
    error: {}
  },
  emits: ["contentUpdate", "import", "changeTheme"],
  setup(i, { expose: v, emit: c }) {
    const o = i, e = w(null), r = (t) => {
      c("contentUpdate", t);
    }, m = w(null), C = D(() => {
      if (o.error === void 0 || o.error === null || o.error === "")
        return "";
      const t = B(o.error) ? o.error.value : o.error;
      return t.startsWith("YAMLException:") ? t.split(`
`)[0] : t;
    });
    return I(
      () => o.value,
      async () => {
        o.value && r(o.value);
      },
      { immediate: !0 }
    ), v({
      handleOpenSwaggerEditor: (t) => {
        var f, h, n;
        t === "importUrl" ? (h = (f = e == null ? void 0 : e.value) == null ? void 0 : f.importUrlModal) == null || h.show() : t === "uploadFile" && ((n = e == null ? void 0 : e.value) == null || n.openFileDialog());
      }
    }), (t, f) => (p(), g(E, null, [
      s(a(z), { id: t.theme }, null, 8, ["id"]),
      s(Q, null, {
        default: u(({ styles: h }) => [
          U("div", {
            class: L(["swagger-editor", h])
          }, [
            s(re, {
              ref_key: "swaggerEditorHeaderRef",
              ref: e,
              proxyUrl: t.proxyUrl,
              onImport: r
            }, {
              "tab-items": u(() => [
                k(t.$slots, "tab-items", {}, void 0, !0)
              ]),
              _: 3
            }, 8, ["proxyUrl"]),
            C.value ? (p(), T(ie, { key: 0 }, {
              default: u(() => [
                d(N(C.value), 1)
              ]),
              _: 1
            })) : S("", !0),
            k(t.$slots, "editor-input", {
              ref_key: "codeMirrorReference",
              ref: m,
              value: t.value,
              onContentUpdate: r
            }, () => [
              s(ae, {
                ref_key: "codeMirrorReference",
                ref: m,
                value: t.value,
                onContentUpdate: r
              }, null, 8, ["value"])
            ], !0)
          ], 2)
        ]),
        _: 3
      })
    ], 64));
  }
}), Ie = /* @__PURE__ */ M(de, [["__scopeId", "data-v-fcc7bbc6"]]);
export {
  Ie as CodeEditor,
  R as HeaderTabButton,
  Q as ResetStyles,
  Ie as SwaggerEditor,
  A as fetchSpecFromUrl,
  q as isJsonString,
  De as useDarkModeState
};
