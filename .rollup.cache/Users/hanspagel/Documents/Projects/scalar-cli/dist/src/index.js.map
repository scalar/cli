{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;AAEA,OAAO,EAAE,OAAO,EAAE,MAAM,WAAW,CAAA;AACnC,OAAO,EAAE,MAAM,SAAS,CAAA;AACxB,OAAO,EAAE,SAAS,EAAE,MAAM,qCAAqC,CAAA;AAC/D,OAAO,EAAE,MAAM,EAAE,MAAM,UAAU,CAAA;AACjC,OAAO,EAAE,OAAO,EAAE,MAAM,iBAAiB,CAAA;AACzC,OAAO,KAAK,MAAM,OAAO,CAAA;AACzB,OAAO,UAAU,MAAM,YAAY,CAAA;AACnC,OAAO,IAAI,MAAM,SAAS,CAAA;AAC1B,OAAO,OAAO,MAAM,SAAS,CAAA;AAC7B,OAAO,EAAE,IAAI,EAAE,MAAM,MAAM,CAAA;AAC3B,OAAO,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAA;AAEzC,OAAO,EAAE,oBAAoB,EAAE,MAAM,uBAAuB,CAAA;AAC5D,OAAO,EAAE,2BAA2B,EAAE,MAAM,SAAS,CAAA;AAErD,SAAS,QAAQ,CAAC,IAAY;IAC5B,IAAI,CAAC;QACH,OAAO,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;IACtC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IACpB,CAAC;AACH,CAAC;AAED,SAAe,cAAc,CAAC,IAAY;;;;;;oBAClC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAA;oBAClB,qBAAM,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAA;;oBAAvC,MAAM,GAAG,SAA8B;oBAE7C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;wBAClB,OAAO,CAAC,IAAI,CACV,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAC7B,KAAK,CAAC,MAAM,CAAC,oDAA+C,CAAC,CAC9D,CAAA;wBACD,OAAO,CAAC,GAAG,EAAE,CAAA;oBACf,CAAC;oBAED,sBAAO,SAAS,CAAC,WAAW,EAA+B,EAAA;;;;CAC5D;AAED,SAAe,iBAAiB,CAAC,IAAY;;;;;;oBACrC,SAAS,GAAG,IAAI,SAAS,EAAE,CAAA;oBAClB,qBAAM,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAA;;oBAAvC,MAAM,GAAG,SAA8B;oBAE7C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;wBAClB,OAAO,CAAC,IAAI,CACV,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAC7B,KAAK,CAAC,MAAM,CAAC,oDAA+C,CAAC,CAC9D,CAAA;wBACD,OAAO,CAAC,GAAG,EAAE,CAAA;oBACf,CAAC;oBAED,sBAAO,SAAS,CAAC,aAA0C,EAAA;;;;CAC5D;AAED,SAAS,cAAc,CAAC,MAAc;;IACpC,IAAM,MAAM,GAAG;QACb,GAAG,EAAE,OAAO;QACZ,IAAI,EAAE,MAAM;QACZ,GAAG,EAAE,QAAQ;QACb,MAAM,EAAE,KAAK;QACb,KAAK,EAAE,SAAS;KACjB,CAAA;IAED,OAAO,MAAA,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,mCAAI,MAAM,CAAA;AAC/C,CAAC;AAED,SAAS,wBAAwB,CAAC,IAAa;;IAC7C,uCAAuC;IACvC,IAAI,IAAI,EAAE,CAAC;QACT,OAAO,IAAI,CAAA;IACb,CAAC;IAED,gCAAgC;IAChC,IAAI,CAAC;QACH,IAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC,CAAA;QAExE,IAAI,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,SAAS,0CAAE,IAAI,EAAE,CAAC;YACnC,OAAO,aAAa,CAAC,SAAS,CAAC,IAAI,CAAA;QACrC,CAAC;IACH,CAAC;IAAC,WAAM,CAAC,CAAA,CAAC;IAEV,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAA;IAC7C,OAAO,CAAC,GAAG,EAAE,CAAA;IACb,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,KAAK,CACT,8FAA8F,CAC/F,CACF,CAAA;IACD,OAAO,CAAC,GAAG,EAAE,CAAA;IAEb,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;AACjB,CAAC;AAED,IAAM,OAAO,GAAG,IAAI,OAAO,EAAE,CAAA;AAE7B,OAAO;KACJ,IAAI,CAAC,aAAa,CAAC;KACnB,WAAW,CAAC,qCAAqC,CAAC;KAClD,OAAO,CAAC,OAAO,CAAC,CAAA;AAEnB,OAAO;KACJ,OAAO,CAAC,MAAM,CAAC;KACf,WAAW,CAAC,iCAAiC,CAAC;KAC9C,MAAM,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;KAChD,MAAM,CAAC,UAAO,EAAQ;QAAN,IAAI,UAAA;;;;;;yBAEf,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,EAA5B,wBAA4B;oBAC9B,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,sCAAsC,CAAC,CAAC,CAAA;oBAClE,OAAO,CAAC,GAAG,EAAE,CAAA;oBAES,qBAAM,OAAO,CAAC;4BAClC,IAAI,EAAE,QAAQ;4BACd,IAAI,EAAE,WAAW;4BACjB,OAAO,EAAE,mCAAmC;4BAC5C,OAAO,EAAE,KAAK;4BACd,MAAM,EAAE,KAAK;4BACb,QAAQ,EAAE,IAAI;yBACf,CAAC,EAAA;;oBAPM,SAAS,GAAK,CAAA,SAOpB,CAAA,UAPe;oBASjB,IAAI,SAAS,KAAK,KAAK,EAAE,CAAC;wBACxB,OAAO,CAAC,GAAG,EAAE,CAAA;wBACb,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;oBACjB,CAAC;;;oBAIG,aAAa,GAAG;wBACpB,SAAS,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE;qBACxB,CAAA;yBAEiB,IAAI,EAAJ,wBAAI;oBAClB,KAAA;wBACE,KAAK,EAAE,IAAI;qBACZ,CAAA;;wBACD,qBAAM,OAAO,CAAC;wBACZ,IAAI,EAAE,MAAM;wBACZ,IAAI,EAAE,OAAO;wBACb,OAAO,EAAE,6BAA6B;wBACtC,OAAO,EAAE,gBAAgB;wBACzB,QAAQ,EAAE,UAAC,KAAa;4BACtB,OAAO,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,qBAAqB,CAAA;wBAC5D,CAAC;qBACF,CAAC,EAAA;;oBARF,KAAA,SAQE,CAAA;;;oBAZE,KAAK,GAAK,IAYZ,MAZO;oBAcb,aAAa,CAAC,SAAS,CAAC,IAAI,GAAG,KAAK,CAAA;oBAE9B,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,CAAA;oBAExC,OAAO,CAAC,GAAG,EAAE,CAAA;oBACb,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAA;oBAClD,OAAO,CAAC,GAAG,EAAE,CAAA;oBACb,OAAO,CAAC,GAAG,CACT,OAAO;yBACJ,IAAI,EAAE;yBACN,KAAK,CAAC,IAAI,CAAC;yBACX,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,KAAK,CAAC,IAAI,CAAC,cAAO,IAAI,CAAE,CAAC,EAAzB,CAAyB,CAAC;yBACxC,IAAI,CAAC,IAAI,CAAC,CACd,CAAA;oBACD,OAAO,CAAC,GAAG,EAAE,CAAA;oBAEb,4BAA4B;oBAC5B,EAAE,CAAC,aAAa,CAAC,aAAa,EAAE,OAAO,CAAC,CAAA;oBAExC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,sCAAsC,CAAC,CAAC,CAAA;oBAChE,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,KAAK,CACT,cAAO,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,oCAAiC,CAC3E,CACF,CAAA;oBACD,OAAO,CAAC,GAAG,EAAE,CAAA;;;;;CACd,CAAC,CAAA;AAEJ,OAAO;KACJ,OAAO,CAAC,QAAQ,CAAC;KACjB,WAAW,CAAC,wBAAwB,CAAC;KACrC,QAAQ,CAAC,QAAQ,EAAE,gBAAgB,CAAC;KACpC,MAAM,CAAC,UAAO,YAAoB;;;;;gBAC3B,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;gBAE7B,IAAI,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAA;gBAE7C,WAAW,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAA;gBAElC,IAAI,CAAC,WAAW,EAAE,CAAC;oBACjB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,CAAA;oBAC/C,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;gBACjB,CAAC;gBAEkB,qBAAM,MAAM,CAAC,WAAW,EAAE;wBAC3C,IAAI,EAAE,KAAK;wBACX,MAAM,EAAE,MAAM;qBACf,CAAC;oBAEF,uCAAuC;kBAFrC;;gBAHI,UAAU,GAAG,SAGjB;gBAEF,uCAAuC;gBACvC,EAAE,CAAC,aAAa,CAAC,IAAI,EAAE,UAAU,EAAE,MAAM,CAAC,CAAA;gBAEpC,OAAO,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;gBAEjC,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAC7B,KAAK,CAAC,IAAI,CACR,aAAM,KAAK,CAAC,KAAK,CAAC,UAAG,KAAK,CAAC,IAAI,CAAC,UAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC,CAAE,CAAC,QAAK,CAAC,CAAE,CAC9E,CACF,CAAA;gBACD,OAAO,CAAC,GAAG,EAAE,CAAA;;;;KACd,CAAC,CAAA;AAEJ,OAAO;KACJ,OAAO,CAAC,UAAU,CAAC;KACnB,WAAW,CAAC,0BAA0B,CAAC;KACvC,QAAQ,CAAC,QAAQ,EAAE,kBAAkB,CAAC;KACtC,MAAM,CAAC,UAAO,YAAoB;;;;;;gBAC3B,SAAS,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;gBAE7B,IAAI,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAA;gBAE7C,SAAS,GAAG,IAAI,SAAS,EAAE,CAAA;gBAClB,qBAAM,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAA;;gBAAvC,MAAM,GAAG,SAA8B;gBAC7C,IAAI,MAAM,CAAC,KAAK,EAAE,CAAC;oBACjB,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,KAAK,CACT,2CAAoC,KAAK,CAAC,KAAK,CAAC,oBAAa,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAG,CAAC,CAAE,CACjG,CACF,CAAA;oBAEK,OAAO,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;oBAEjC,OAAO,CAAC,GAAG,EAAE,CAAA;oBACb,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAC7B,KAAK,CAAC,IAAI,CACR,aAAM,KAAK,CAAC,KAAK,CAAC,UAAG,KAAK,CAAC,IAAI,CAAC,UAAG,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,SAAS,CAAC,CAAE,CAAC,QAAK,CAAC,CAAE,CAC9E,CACF,CAAA;oBACD,OAAO,CAAC,GAAG,EAAE,CAAA;gBACf,CAAC;qBAAM,CAAC;oBACN,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAA;oBAC7C,OAAO,CAAC,GAAG,EAAE,CAAA;oBACb,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,oDAA+C,CAAC,CAAC,CAAA;oBACzE,OAAO,CAAC,GAAG,EAAE,CAAA;oBACb,OAAO,CAAC,KAAK,CACX,KAAK,CAAC,GAAG,CACP,UAAG,KAAK,CAAC,IAAI,CAAC,UAAG,MAAA,MAAM,CAAC,MAAM,0CAAE,MAAM,mBAAS,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAE,CAAC,YAAS,CAChH,CACF,CAAA;oBACD,OAAO,CAAC,GAAG,EAAE,CAAA;oBAEb,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;gBACjB,CAAC;;;;KACF,CAAC,CAAA;AAEJ,OAAO;KACJ,OAAO,CAAC,OAAO,CAAC;KAChB,WAAW,CAAC,uBAAuB,CAAC;KACpC,QAAQ,CAAC,QAAQ,EAAE,eAAe,CAAC;KACnC,MAAM,CAAC,UAAO,YAAoB;;;QAC3B,IAAI,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAA;QAEnD,KAAK,CAAC,sCAAsC,EAAE;YAC5C,MAAM,EAAE,MAAM;YACd,OAAO,EAAE;gBACP,cAAc,EAAE,kBAAkB;aACnC;YACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;gBACnB,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC;aACxB,CAAC;SACH,CAAC;aACC,IAAI,CAAC,UAAC,QAAQ,IAAK,OAAA,QAAQ,CAAC,IAAI,EAAE,EAAf,CAAe,CAAC;aACnC,IAAI,CAAC,UAAC,IAAI;YACD,IAAA,EAAE,GAAK,IAAI,GAAT,CAAS;YAEnB,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,8BAA8B,CAAC,CAAC,CAAA;YAC/D,OAAO,CAAC,GAAG,EAAE,CAAA;YACb,OAAO,CAAC,GAAG,CACT,UAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,cAAI,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,cAAI,KAAK,CAAC,IAAI,CAAC,uCAAgC,EAAE,CAAE,CAAC,CAAE,CAC7H,CAAA;YACD,OAAO,CAAC,GAAG,CACT,UAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,cAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,cAAI,KAAK,CAAC,IAAI,CAAC,uCAAgC,EAAE,CAAE,CAAC,CAAE,CACpH,CAAA;YACD,OAAO,CAAC,GAAG,EAAE,CAAA;YACb,OAAO,CAAC,GAAG,CACT,UAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,cAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,cAAI,KAAK,CAAC,IAAI,CAAC,2CAAoC,EAAE,kBAAe,CAAC,CAAE,CAC3I,CAAA;YACD,OAAO,CAAC,GAAG,CACT,UAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,cAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,cAAI,KAAK,CAAC,IAAI,CAAC,2CAAoC,EAAE,kBAAe,CAAC,CAAE,CAC3I,CAAA;YACD,OAAO,CAAC,GAAG,EAAE,CAAA;QACf,CAAC,CAAC;aACD,KAAK,CAAC,UAAC,KAAK;YACX,OAAO,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAA;YAC1C,OAAO,CAAC,GAAG,EAAE,CAAA;YACb,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAA;YAC9B,OAAO,CAAC,GAAG,EAAE,CAAA;YACb,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACjB,CAAC,CAAC,CAAA;;;KACL,CAAC,CAAA;AAEJ,OAAO;KACJ,OAAO,CAAC,MAAM,CAAC;KACf,WAAW,CAAC,kCAAkC,CAAC;KAC/C,QAAQ,CAAC,QAAQ,EAAE,qCAAqC,CAAC;KACzD,MAAM,CAAC,aAAa,EAAE,4BAA4B,CAAC;KACnD,MAAM,CAAC,mBAAmB,EAAE,uCAAuC,CAAC;KACpE,MAAM,CACL,UACE,YAAoB,EACpB,EAAmD;QAAjD,KAAK,WAAA,EAAE,IAAI,UAAA;;;;;;;oBAEP,IAAI,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAA;oBAEtC,qBAAM,cAAc,CAAC,IAAI,CAAC;wBAEvC,yBAAyB;sBAFc;;oBAAnC,MAAM,GAAG,SAA0B;oBAEvC,yBAAyB;oBACzB,IAAI,KAAK,EAAE,CAAC;wBACV,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE;;;;wCACjB,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAC5B,KAAK,CAAC,IAAI,CAAC,0BAA0B,CAAC,CACvC,CAAA;wCACQ,qBAAM,cAAc,CAAC,IAAI,CAAC,EAAA;;wCAAnC,MAAM,GAAG,SAA0B,CAAA;;;;6BACpC,CAAC,CAAA;oBACJ,CAAC;oBAED,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAA;oBAClD,OAAO,CAAC,GAAG,EAAE,CAAA;oBAEb,IACE,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,MAAK,SAAS;wBAC3B,MAAM,CAAC,IAAI,CAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EACvC,CAAC;wBACD,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAC7B,KAAK,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAC3D,CAAA;oBACH,CAAC;oBAED,yBAAyB;oBACzB,KAAW,IAAI,IAAI,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,mCAAI,EAAE,EAAE,CAAC;wBACvC,2BAA2B;wBAC3B,KAAW,MAAM,IAAI,MAAA,MAAM,CAAC,KAAK,0CAAG,IAAI,CAAC,EAAE,CAAC;4BAC1C,OAAO,CAAC,GAAG,CACT,UAAG,KAAK,CAAC,IAAI,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAI,KAAK,CAAC,IAAI,CAAC,UAAG,IAAI,CAAE,CAAC,CAAE,CACnG,CAAA;wBACH,CAAC;oBACH,CAAC;oBAED,OAAO,CAAC,GAAG,EAAE,CAAA;oBAEP,GAAG,GAAG,IAAI,IAAI,EAAE,CAAA;oBAEtB,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,UAAC,CAAC;wBACR,IAAA,KAAmB,CAAC,CAAC,GAAG,EAAtB,MAAM,YAAA,EAAE,IAAI,UAAU,CAAA;wBAE9B,IAAM,SAAS,GAAG,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;wBAEnE,OAAO,CAAC,GAAG,CACT,UAAG,KAAK,CAAC,IAAI,EAAE,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,cAAI,KAAK,CAAC,IAAI,CAAC,UAAG,IAAI,CAAE,CAAC,CAAE,EAClG,UAAG,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,cAAI,CAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,WAAW,EAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAE,CACzH,CAAA;wBAED,IAAI,CAAC,SAAS,EAAE,CAAC;4BACf,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,CAAC,CAAA;wBACjC,CAAC;wBAED,oBAAoB;wBACpB,6CAA6C;wBAC7C,IAAI;wBAEJ,IAAM,yBAAyB,GAC7B,SAAS,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAA;wBAExD,IAAM,QAAQ,GAAG,yBAAyB,CAAC,OAAO;4BAChD,CAAC,CAAC,yBAAyB,CAAC,OAAO;4BACnC,CAAC,CAAC,yBAAyB,CAAC,MAAM;gCAChC,CAAC,CAAC,oBAAoB,CAAC,yBAAyB,CAAC,MAAM,EAAE;oCACrD,WAAW,EAAE,GAAG;iCACjB,CAAC;gCACJ,CAAC,CAAC,IAAI,CAAA;wBAEV,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;oBACzB,CAAC,CAAC,CAAA;oBAEF,KAAK,CACH;wBACE,KAAK,EAAE,GAAG,CAAC,KAAK;wBAChB,IAAI,EAAE,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,IAAI;qBACnB,EACD,UAAC,IAAI;wBACH,OAAO,CAAC,GAAG,CACT,UAAG,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,eAAe,CAAC,cAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,cAAI,KAAK,CAAC,IAAI,CAAC,2BAAoB,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CACvH,CAAA;wBACD,OAAO,CAAC,GAAG,EAAE,CAAA;oBACf,CAAC,CACF,CAAA;;;;;CACF,CACF,CAAA;AAEH,OAAO;KACJ,OAAO,CAAC,WAAW,CAAC;KACpB,WAAW,CAAC,6CAA6C,CAAC;KAC1D,QAAQ,CAAC,QAAQ,EAAE,wCAAwC,CAAC;KAC5D,MAAM,CAAC,aAAa,EAAE,4BAA4B,CAAC;KACnD,MAAM,CAAC,mBAAmB,EAAE,gDAAgD,CAAC;KAC7E,MAAM,CACL,UACE,YAAoB,EACpB,EAAmD;QAAjD,KAAK,WAAA,EAAE,IAAI,UAAA;;;;;;oBAEP,IAAI,GAAG,wBAAwB,CAAC,YAAY,CAAC,CAAA;oBAE/B,qBAAM,iBAAiB,CAAC,IAAI,CAAC;wBAEjD,yBAAyB;sBAFwB;;oBAA7C,aAAa,GAAG,SAA6B;oBAEjD,yBAAyB;oBACzB,IAAI,KAAK,EAAE,CAAC;wBACV,EAAE,CAAC,SAAS,CAAC,IAAI,EAAE;;;;wCACjB,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,QAAQ,CAAC,EAC5B,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,CACpC,CAAA;wCACe,qBAAM,iBAAiB,CAAC,IAAI,CAAC,EAAA;;wCAA7C,aAAa,GAAG,SAA6B,CAAA;;;;6BAC9C,CAAC,CAAA;oBACJ,CAAC;oBAED,IACE,CAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,MAAK,SAAS;wBAClC,MAAM,CAAC,IAAI,CAAC,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,EAC9C,CAAC;wBACD,OAAO,CAAC,GAAG,CACT,KAAK,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,EAC7B,KAAK,CAAC,IAAI,CAAC,8CAA8C,CAAC,CAC3D,CAAA;oBACH,CAAC;oBAEK,GAAG,GAAG,IAAI,IAAI,EAAE,CAAA;oBAEtB,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,CAAC;wBACb,OAAO,CAAC,CAAC,IAAI,CAAC,gkBAkBgD,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,4IAGnF,CAAC,CAAA;oBACX,CAAC,CAAC,CAAA;oBAEF,KAAK,CACH;wBACE,KAAK,EAAE,GAAG,CAAC,KAAK;wBAChB,IAAI,EAAE,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,IAAI;qBACnB,EACD,UAAC,IAAI;wBACH,OAAO,CAAC,GAAG,CACT,UAAG,KAAK,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,wBAAwB,CAAC,cAAI,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,cAAI,KAAK,CAAC,IAAI,CAAC,2BAAoB,IAAI,CAAC,IAAI,CAAE,CAAC,CAAE,CAChI,CAAA;wBACD,OAAO,CAAC,GAAG,EAAE,CAAA;oBACf,CAAC,CACF,CAAA;;;;;CACF,CACF,CAAA;AAEH,OAAO,CAAC,KAAK,EAAE,CAAA","sourcesContent":["#!/usr/bin/env node\n\nimport { Command } from 'commander'\nimport fs from 'node:fs'\nimport { Validator } from '@seriousme/openapi-schema-validator'\nimport { format } from 'prettier'\nimport { version } from '../package.json'\nimport kleur from 'kleur'\nimport prettyjson from 'prettyjson'\nimport toml from 'toml-js'\nimport prompts from 'prompts'\nimport { Hono } from 'hono'\nimport { serve } from '@hono/node-server'\nimport type { OpenAPI } from 'openapi-types'\nimport { getExampleFromSchema } from '@scalar/api-reference'\nimport { getOperationByMethodAndPath } from './utils'\n\nfunction readFile(file: string) {\n  try {\n    return fs.readFileSync(file, 'utf8')\n  } catch (err) {\n    console.error(err)\n  }\n}\n\nasync function getOpenApiFile(file: string) {\n  const validator = new Validator()\n  const result = await validator.validate(file)\n\n  if (!result.valid) {\n    console.warn(\n      kleur.bold().yellow('[WARN]'),\n      kleur.yellow(`File doesn’t match the OpenAPI specification.`),\n    )\n    console.log()\n  }\n\n  return validator.resolveRefs() as Promise<OpenAPI.Document>\n}\n\nasync function getRawOpenApiFile(file: string) {\n  const validator = new Validator()\n  const result = await validator.validate(file)\n\n  if (!result.valid) {\n    console.warn(\n      kleur.bold().yellow('[WARN]'),\n      kleur.yellow(`File doesn’t match the OpenAPI specification.`),\n    )\n    console.log()\n  }\n\n  return validator.specification as Promise<OpenAPI.Document>\n}\n\nfunction getMethodColor(method: string) {\n  const colors = {\n    get: 'green',\n    post: 'cyan',\n    put: 'yellow',\n    delete: 'red',\n    patch: 'magenta',\n  }\n\n  return colors[method.toLowerCase()] ?? 'grey'\n}\n\nfunction getFileFromConfiguration(file?: string) {\n  // If file is empty, throw an exception\n  if (file) {\n    return file\n  }\n\n  // Try to load the configuration\n  try {\n    const configuration = toml.parse(fs.readFileSync('scalar.toml', 'utf8'))\n\n    if (configuration?.reference?.file) {\n      return configuration.reference.file\n    }\n  } catch {}\n\n  console.error(kleur.red('No file provided.'))\n  console.log()\n  console.log(\n    kleur.white(\n      'Try `scalar init` or add the file as an argument. Read `scalar --help` for more information.',\n    ),\n  )\n  console.log()\n\n  process.exit(1)\n}\n\nconst program = new Command()\n\nprogram\n  .name('@scalar/cli')\n  .description('CLI to work with your OpenAPI files')\n  .version(version)\n\nprogram\n  .command('init')\n  .description('Create a new `scalar.toml` file')\n  .option('-f, --file [file]', 'your OpenAPI file')\n  .action(async ({ file }) => {\n    // Check if `scalar.toml` already exists\n    if (fs.existsSync('scalar.toml')) {\n      console.warn(kleur.yellow('A `scalar.toml` file already exists.'))\n      console.log()\n\n      const { overwrite } = await prompts({\n        type: 'toggle',\n        name: 'overwrite',\n        message: 'Do you want to override the file?',\n        initial: false,\n        active: 'yes',\n        inactive: 'no',\n      })\n\n      if (overwrite === false) {\n        console.log()\n        process.exit(1)\n      }\n    }\n\n    // Ask for the OpenAPI file\n    const configuration = {\n      reference: { file: '' },\n    }\n\n    const { input } = file\n      ? {\n          input: file,\n        }\n      : await prompts({\n          type: 'text',\n          name: 'input',\n          message: 'Where is your OpenAPI file?',\n          initial: './openapi.json',\n          validate: (input: string) => {\n            return fs.existsSync(input) ? true : 'File doesn’t exist.'\n          },\n        })\n\n    configuration.reference.file = input\n\n    const content = toml.dump(configuration)\n\n    console.log()\n    console.log(kleur.bold().white(`    scalar.toml`))\n    console.log()\n    console.log(\n      content\n        .trim()\n        .split('\\n')\n        .map((line) => kleur.grey(`    ${line}`))\n        .join('\\n'),\n    )\n    console.log()\n\n    // Create `scalar.toml` file\n    fs.writeFileSync('scalar.toml', content)\n\n    console.log(kleur.green(`Created a new project configuration.`))\n    console.log(\n      kleur.white(\n        `Run ${kleur.grey().bold('scalar --help')} to see all available commands.`,\n      ),\n    )\n    console.log()\n  })\n\nprogram\n  .command('format')\n  .description('Format an OpenAPI file')\n  .argument('[file]', 'file to format')\n  .action(async (fileArgument: string) => {\n    const startTime = performance.now()\n\n    const file = getFileFromConfiguration(fileArgument)\n\n    const fileContent = readFile(file)\n\n    if (!fileContent) {\n      console.error(kleur.red('Couldn’t read file.'))\n      process.exit(1)\n    }\n\n    const newContent = await format(fileContent, {\n      semi: false,\n      parser: 'json',\n    })\n\n    // Replace file content with newContent\n    fs.writeFileSync(file, newContent, 'utf8')\n\n    const endTime = performance.now()\n\n    console.log(\n      kleur.green(`File formatted`),\n      kleur.grey(\n        `in ${kleur.white(`${kleur.bold(`${Math.round(endTime - startTime)}`)} ms`)}`,\n      ),\n    )\n    console.log()\n  })\n\nprogram\n  .command('validate')\n  .description('Validate an OpenAPI file')\n  .argument('[file]', 'file to validate')\n  .action(async (fileArgument: string) => {\n    const startTime = performance.now()\n\n    const file = getFileFromConfiguration(fileArgument)\n\n    const validator = new Validator()\n    const result = await validator.validate(file)\n    if (result.valid) {\n      console.log(\n        kleur.green(\n          `Matches the OpenAPI specification${kleur.white(` (OpenAPI ${kleur.bold(validator.version)})`)}`,\n        ),\n      )\n\n      const endTime = performance.now()\n\n      console.log()\n      console.log(\n        kleur.green(`File validated`),\n        kleur.grey(\n          `in ${kleur.white(`${kleur.bold(`${Math.round(endTime - startTime)}`)} ms`)}`,\n        ),\n      )\n      console.log()\n    } else {\n      console.log(prettyjson.render(result.errors))\n      console.log()\n      console.error(kleur.red(`File doesn’t match the OpenAPI specification.`))\n      console.log()\n      console.error(\n        kleur.red(\n          `${kleur.bold(`${result.errors?.length} error${result.errors && result.errors.length > 1 ? 's' : ''}`)} found.`,\n        ),\n      )\n      console.log()\n\n      process.exit(1)\n    }\n  })\n\nprogram\n  .command('share')\n  .description('Share an OpenAPI file')\n  .argument('[file]', 'file to share')\n  .action(async (fileArgument: string) => {\n    const file = getFileFromConfiguration(fileArgument)\n\n    fetch('https://sandbox.scalar.com/api/share', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        content: readFile(file),\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        const { id } = data\n\n        console.log(kleur.bold().green('Your OpenAPI file is public.'))\n        console.log()\n        console.log(\n          `${kleur.green('➜')} ${kleur.bold().white('API Reference:'.padEnd(14))} ${kleur.cyan(`https://sandbox.scalar.com/p/${id}`)}`,\n        )\n        console.log(\n          `${kleur.grey('➜')} ${kleur.bold().grey('Editor:'.padEnd(14))} ${kleur.cyan(`https://sandbox.scalar.com/e/${id}`)}`,\n        )\n        console.log()\n        console.log(\n          `${kleur.grey('➜')} ${kleur.bold().grey('OpenAPI JSON:'.padEnd(14))} ${kleur.cyan(`https://sandbox.scalar.com/files/${id}/openapi.json`)}`,\n        )\n        console.log(\n          `${kleur.grey('➜')} ${kleur.bold().grey('OpenAPI YAML:'.padEnd(14))} ${kleur.cyan(`https://sandbox.scalar.com/files/${id}/openapi.yaml`)}`,\n        )\n        console.log()\n      })\n      .catch((error) => {\n        console.error('Failed to share the file.')\n        console.log()\n        console.error('Error:', error)\n        console.log()\n        process.exit(1)\n      })\n  })\n\nprogram\n  .command('mock')\n  .description('Mock an API from an OpenAPI file')\n  .argument('[file]', 'OpenAPI file to mock the server for')\n  .option('-w, --watch', 'watch the file for changes')\n  .option('-p, --port <port>', 'set the HTTP port for the mock server')\n  .action(\n    async (\n      fileArgument: string,\n      { watch, port }: { watch?: boolean; port?: number },\n    ) => {\n      const file = getFileFromConfiguration(fileArgument)\n\n      let schema = await getOpenApiFile(file)\n\n      // watch file for changes\n      if (watch) {\n        fs.watchFile(file, async () => {\n          console.log(\n            kleur.bold().white('[INFO]'),\n            kleur.grey('Mock Server was updated.'),\n          )\n          schema = await getOpenApiFile(file)\n        })\n      }\n\n      console.log(kleur.bold().white('Available Paths'))\n      console.log()\n\n      if (\n        schema?.paths === undefined ||\n        Object.keys(schema?.paths).length === 0\n      ) {\n        console.log(\n          kleur.bold().yellow('[WARN]'),\n          kleur.grey('Couldn’t find any paths in the OpenAPI file.'),\n        )\n      }\n\n      // loop through all paths\n      for (const path in schema?.paths ?? []) {\n        // loop through all methods\n        for (const method in schema.paths?.[path]) {\n          console.log(\n            `${kleur.bold()[getMethodColor(method)](method.toUpperCase().padEnd(6))} ${kleur.grey(`${path}`)}`,\n          )\n        }\n      }\n\n      console.log()\n\n      const app = new Hono()\n\n      app.all('/*', (c) => {\n        const { method, path } = c.req\n\n        const operation = getOperationByMethodAndPath(schema, method, path)\n\n        console.log(\n          `${kleur.bold()[getMethodColor(method)](method.toUpperCase().padEnd(6))} ${kleur.grey(`${path}`)}`,\n          `${kleur.grey('→')} ${operation?.operationId ? kleur.white(operation.operationId) : kleur.red('[ERROR] 404 Not Found')}`,\n        )\n\n        if (!operation) {\n          return c.text('Not found', 404)\n        }\n\n        // if (!operation) {\n        //   return c.text('Method not allowed', 405)\n        // }\n\n        const jsonResponseConfiguration =\n          operation.responses['200'].content['application/json']\n\n        const response = jsonResponseConfiguration.example\n          ? jsonResponseConfiguration.example\n          : jsonResponseConfiguration.schema\n            ? getExampleFromSchema(jsonResponseConfiguration.schema, {\n                emptyString: '…',\n              })\n            : null\n\n        return c.json(response)\n      })\n\n      serve(\n        {\n          fetch: app.fetch,\n          port: port ?? 3000,\n        },\n        (info) => {\n          console.log(\n            `${kleur.bold().green('➜ Mock Server')} ${kleur.white('listening on')} ${kleur.cyan(`http://localhost:${info.port}`)}`,\n          )\n          console.log()\n        },\n      )\n    },\n  )\n\nprogram\n  .command('reference')\n  .description('Serve an API Reference from an OpenAPI file')\n  .argument('[file]', 'OpenAPI file to show the reference for')\n  .option('-w, --watch', 'watch the file for changes')\n  .option('-p, --port <port>', 'set the HTTP port for the API reference server')\n  .action(\n    async (\n      fileArgument: string,\n      { watch, port }: { watch?: boolean; port?: number },\n    ) => {\n      const file = getFileFromConfiguration(fileArgument)\n\n      let specification = await getRawOpenApiFile(file)\n\n      // watch file for changes\n      if (watch) {\n        fs.watchFile(file, async () => {\n          console.log(\n            kleur.bold().white('[INFO]'),\n            kleur.grey('OpenAPI file modified'),\n          )\n          specification = await getRawOpenApiFile(file)\n        })\n      }\n\n      if (\n        specification?.paths === undefined ||\n        Object.keys(specification?.paths).length === 0\n      ) {\n        console.log(\n          kleur.bold().yellow('[WARN]'),\n          kleur.grey('Couldn’t find any paths in the OpenAPI file.'),\n        )\n      }\n\n      const app = new Hono()\n\n      app.get('/', (c) => {\n        return c.html(`<!doctype html>\n        <html>\n          <head>\n            <title>API Reference</title>\n            <meta charset=\"utf-8\" />\n            <meta\n              name=\"viewport\"\n              content=\"width=device-width, initial-scale=1\" />\n            <style>\n              body {\n                margin: 0;\n              }\n            </style>\n          </head>\n          <body>\n            <script\n              id=\"api-reference\"\n              type=\"application/json\"\n              data-proxy-url=\"https://api.scalar.com/request-proxy\">${JSON.stringify(specification)}</script>\n            <script src=\"https://cdn.jsdelivr.net/npm/@scalar/api-reference\"></script>\n          </body>\n        </html>`)\n      })\n\n      serve(\n        {\n          fetch: app.fetch,\n          port: port ?? 3000,\n        },\n        (info) => {\n          console.log(\n            `${kleur.bold().green('➜ API Reference Server')} ${kleur.white('listening on')} ${kleur.cyan(`http://localhost:${info.port}`)}`,\n          )\n          console.log()\n        },\n      )\n    },\n  )\n\nprogram.parse()\n"]}