import { type Component } from 'vue';
export type ToastStatus = 'Error';
type ToastOptions = {
    timeout?: number;
};
type BaseToast = {
    id: string;
    options?: ToastOptions;
};
type DefaultToastContent = {
    title: string;
    description?: Component | string;
    status?: ToastStatus;
};
type CustomToastContent = {
    component: Component;
};
export type DefaultToast = DefaultToastContent & BaseToast;
export type CustomToast = CustomToastContent & BaseToast;
export type Toast = DefaultToast | CustomToast;
export type ToastHandle = {
    id: string;
    dismiss: () => void;
    active: () => boolean;
};
/** Shows a toast the given options */
export declare function addToast(contents: DefaultToastContent, options?: ToastOptions): ToastHandle;
/** Shows a toast with an error status */
export declare function addErrorToast(message: Component | string): ToastHandle;
/** Shows a toast with a custom component */
export declare function addCustomToast(component: Component, options?: ToastOptions): ToastHandle;
/** Gets access to all the toasts */
export declare function useToasts(): {
    toasts: readonly Toast[];
    addToast: typeof addToast;
    removeToast: typeof removeToast;
    clearToasts: typeof clearToasts;
};
/** Remove a toast by id */
declare function removeToast(id: string): void;
/** Clear all toasts */
declare function clearToasts(): void;
export {};
//# sourceMappingURL=FlowToast.d.ts.map