(function() {
  "use strict";
  try {
    if (typeof document != "undefined") {
      var elementStyle = document.createElement("style");
      elementStyle.appendChild(document.createTextNode(".progress-ring[data-v-6d218ca0] {\n  transform: rotate(-90deg);\n  transform-origin: 50% 50%;\n  animation: linear turn-6d218ca0 reverse forwards;\n}\n@keyframes turn-6d218ca0 {\nfrom {\n    stroke-dashoffset: var(--2d61a1b2);\n}\nto {\n    stroke-dashoffset: 0;\n}\n}\n\n.toast-layout[data-v-c76046db] {\n  pointer-events: initial;\n\n  box-sizing: border-box;\n\n  padding: 18px;\n  background: var(--theme-background-1, var(--default-theme-background-1));\n  border-radius: var(--theme-radius-lg, var(--default-theme-radius-lg));\n  font-size: var(--theme-font-size-3, var(--default-theme-font-size-3));\n  color: var(--theme-color-1, var(--default-theme-color-1));\n  display: grid;\n  grid-template-columns: auto 1fr auto;\n  grid-template-areas:\n    'icon title timeout'\n    '. description description';\n  align-items: center;\n  position: relative;\n\n  width: 100%;\n}\n.toast-title[data-v-c76046db] {\n  grid-area: title;\n  font-weight: var(--theme-font-semibold, var(--default-theme-font-semibold));\n  display: flex;\n  align-items: center;\n}\n.toast-description[data-v-c76046db] {\n  grid-area: description;\n  margin-top: 5px;\n  line-height: 1.45;\n  color: var(--theme-color-2, var(--default-theme-color-2));\n}\n.toast-icon[data-v-c76046db] {\n  grid-area: icon;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-right: 10px;\n  color: var(--theme-color-2, var(--default-theme-color-2));\n}\n.toast-icon[data-v-c76046db] >  * {\n  width: 14px;\n  height: 14px;\n}\n.toast-timeout[data-v-c76046db] {\n  grid-area: timeout;\n  margin-left: 10px;\n  width: 16px;\n  height: 16px;\n  display: flex;\n  color: var(--theme-color-ghost, var(--default-theme-color-ghost));\n}\n.toast-error .toast-icon[data-v-c76046db],\n.toast-error .toast-title[data-v-c76046db] {\n  color: var(--theme-error-color, var(--default-theme-color-red));\n}\n\n.toast[data-v-5e2e8f38] {\n  pointer-events: initial;\n  filter: brightness(\n    var(--theme-lifted-brightness, var(--default-theme-lifted-brightness))\n  );\n\n  background: var(--theme-background-1, var(--default-theme-background-1));\n  border-radius: var(--theme-radius-lg, var(--default-theme-radius-lg));\n  box-shadow: var(--theme-shadow-2, var(--default-theme-shadow-2));\n  font-family: var(--theme-font, var(--default-theme-font));\n\n  width: 380px;\n  max-width: 100%;\n  min-width: 0;\n}\n\n.toast-container[data-v-e7c9664e] {\n  width: 100dvw;\n  height: 100svh;\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  z-index: 1000000;\n\n  box-sizing: border-box;\n\n  pointer-events: none;\n\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: flex-end;\n  gap: 12px;\n\n  padding: 48px;\n}\n@media screen and (max-width: 600px) {\n  /* Less padding for toasts on mobile */\n.toast-container[data-v-e7c9664e] {\n    padding: 24px;\n}\n}\n.toasts-move[data-v-e7c9664e],\n.toasts-enter-active[data-v-e7c9664e],\n.toasts-leave-active[data-v-e7c9664e] {\n  transition: all 0.5s ease;\n}\n.toasts-enter-from[data-v-e7c9664e],\n.toasts-leave-to[data-v-e7c9664e] {\n  opacity: 0;\n  transform: translateX(30px);\n}\n.toast-leave-active[data-v-e7c9664e] {\n  position: absolute;\n}"));
      document.head.appendChild(elementStyle);
    }
  } catch (e) {
    console.error("vite-plugin-css-injected-by-js", e);
  }
})();
import { nanoid } from "nanoid";
import { reactive, readonly, defineComponent, useCssVars, computed, openBlock, createElementBlock, createElementVNode, normalizeStyle, normalizeClass, renderSlot, createCommentVNode, createBlock, resolveDynamicComponent, createSlots, withCtx, createVNode, createTextVNode, toDisplayString, Fragment, TransitionGroup, renderList, unref } from "vue";
const toasts = reactive([]);
function createToast(content, options) {
  const id = nanoid();
  toasts.push({ id, ...content, options });
  let timer;
  if (options == null ? void 0 : options.timeout) {
    timer = setTimeout(() => {
      removeToast(id);
    }, options.timeout);
  }
  const dismiss = () => {
    if (timer)
      clearTimeout(timer);
    removeToast(id);
  };
  const active = () => {
    return toasts.some((t) => t.id === id);
  };
  return { id, dismiss, active };
}
function addToast(contents, options) {
  return createToast(contents, options);
}
function addErrorToast(message) {
  return createToast(
    {
      title: "Something went wrong...",
      description: message,
      status: "Error"
    },
    {
      timeout: 5e3
    }
  );
}
function addCustomToast(component, options) {
  return createToast({ component }, options);
}
function useToasts() {
  return {
    toasts: readonly(toasts),
    addToast,
    removeToast,
    clearToasts
  };
}
function removeToast(id) {
  const idx = toasts.findIndex((t) => t.id === id);
  if (idx < 0)
    return;
  toasts.splice(idx, 1);
}
function clearToasts() {
  toasts.splice(0, toasts.length);
}
const _hoisted_1$3 = { viewBox: "0 0 24 24" };
const _hoisted_2$1 = ["stroke-dasharray"];
const stroke = 2;
const _sfc_main$3 = /* @__PURE__ */ defineComponent({
  __name: "FlowProgressRing",
  props: {
    duration: {}
  },
  setup(__props) {
    const props = __props;
    useCssVars((_ctx) => ({
      "2d61a1b2": circumference
    }));
    const normalizedRadius = 12 - stroke * 2;
    const circumference = normalizedRadius * 2 * Math.PI;
    const animationDuration = computed(() => `${props.duration}ms`);
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("svg", _hoisted_1$3, [
        createElementVNode("circle", {
          class: "progress-ring",
          cx: 12,
          cy: 12,
          fill: "transparent",
          r: normalizedRadius,
          stroke: "currentColor",
          "stroke-dasharray": circumference + " " + circumference,
          "stroke-width": stroke,
          style: normalizeStyle({ animationDuration: animationDuration.value })
        }, null, 12, _hoisted_2$1)
      ]);
    };
  }
});
const FlowProgressRing_vue_vue_type_style_index_0_scoped_6d218ca0_lang = "";
const _export_sfc = (sfc, props) => {
  const target = sfc.__vccOpts || sfc;
  for (const [key, val] of props) {
    target[key] = val;
  }
  return target;
};
const FlowProgressRing = /* @__PURE__ */ _export_sfc(_sfc_main$3, [["__scopeId", "data-v-6d218ca0"]]);
const _hoisted_1$2 = {
  key: 0,
  class: "toast-icon"
};
const _hoisted_2 = { class: "toast-title" };
const _hoisted_3 = {
  key: 1,
  class: "toast-description text-copy-light"
};
const _hoisted_4 = {
  key: 2,
  class: "toast-timeout"
};
const _sfc_main$2 = /* @__PURE__ */ defineComponent({
  __name: "FlowToastLayout",
  props: {
    status: {}
  },
  setup(__props) {
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", {
        class: normalizeClass(["toast-layout", { "toast-error": _ctx.status === "Error" }])
      }, [
        _ctx.$slots.icon ? (openBlock(), createElementBlock("div", _hoisted_1$2, [
          renderSlot(_ctx.$slots, "icon", {}, void 0, true)
        ])) : createCommentVNode("", true),
        createElementVNode("div", _hoisted_2, [
          renderSlot(_ctx.$slots, "title", {}, void 0, true)
        ]),
        _ctx.$slots.description ? (openBlock(), createElementBlock("div", _hoisted_3, [
          renderSlot(_ctx.$slots, "description", {}, void 0, true)
        ])) : createCommentVNode("", true),
        _ctx.$slots.timeout ? (openBlock(), createElementBlock("div", _hoisted_4, [
          renderSlot(_ctx.$slots, "timeout", {}, void 0, true)
        ])) : createCommentVNode("", true)
      ], 2);
    };
  }
});
const FlowToastLayout_vue_vue_type_style_index_0_scoped_c76046db_lang = "";
const FlowToastLayout = /* @__PURE__ */ _export_sfc(_sfc_main$2, [["__scopeId", "data-v-c76046db"]]);
const _hoisted_1$1 = { class: "toast" };
const _sfc_main$1 = /* @__PURE__ */ defineComponent({
  __name: "FlowToast",
  props: {
    toast: {}
  },
  setup(__props) {
    const isCustom = (t) => {
      return t.component !== void 0;
    };
    return (_ctx, _cache) => {
      var _a, _b;
      return openBlock(), createElementBlock("div", _hoisted_1$1, [
        isCustom(_ctx.toast) ? (openBlock(), createBlock(resolveDynamicComponent(_ctx.toast.component), { key: 0 }, createSlots({ _: 2 }, [
          ((_a = _ctx.toast.options) == null ? void 0 : _a.timeout) ? {
            name: "timeout",
            fn: withCtx(() => [
              createVNode(FlowProgressRing, {
                duration: _ctx.toast.options.timeout
              }, null, 8, ["duration"])
            ]),
            key: "0"
          } : void 0
        ]), 1024)) : createCommentVNode("", true),
        !isCustom(_ctx.toast) ? (openBlock(), createBlock(FlowToastLayout, {
          key: 1,
          status: _ctx.toast.status
        }, createSlots({
          title: withCtx(() => [
            createTextVNode(toDisplayString(_ctx.toast.title), 1)
          ]),
          _: 2
        }, [
          _ctx.toast.description ? {
            name: "description",
            fn: withCtx(() => [
              typeof _ctx.toast.description === "string" ? (openBlock(), createElementBlock(Fragment, { key: 0 }, [
                createTextVNode(toDisplayString(_ctx.toast.description), 1)
              ], 64)) : (openBlock(), createBlock(resolveDynamicComponent(_ctx.toast.description), { key: 1 }))
            ]),
            key: "0"
          } : void 0,
          ((_b = _ctx.toast.options) == null ? void 0 : _b.timeout) ? {
            name: "timeout",
            fn: withCtx(() => [
              createVNode(FlowProgressRing, {
                duration: _ctx.toast.options.timeout
              }, null, 8, ["duration"])
            ]),
            key: "1"
          } : void 0
        ]), 1032, ["status"])) : createCommentVNode("", true)
      ]);
    };
  }
});
const FlowToast_vue_vue_type_style_index_0_scoped_5e2e8f38_lang = "";
const FlowToast = /* @__PURE__ */ _export_sfc(_sfc_main$1, [["__scopeId", "data-v-5e2e8f38"]]);
const _hoisted_1 = { class: "toast-container" };
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "FlowToastContainer",
  setup(__props) {
    const { toasts: toasts2 } = useToasts();
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, [
        createVNode(TransitionGroup, { name: "toasts" }, {
          default: withCtx(() => [
            (openBlock(true), createElementBlock(Fragment, null, renderList(unref(toasts2), (toast) => {
              return openBlock(), createBlock(FlowToast, {
                key: toast.id,
                toast
              }, null, 8, ["toast"]);
            }), 128))
          ]),
          _: 1
        })
      ]);
    };
  }
});
const FlowToastContainer_vue_vue_type_style_index_0_scoped_e7c9664e_lang = "";
const FlowToastContainer = /* @__PURE__ */ _export_sfc(_sfc_main, [["__scopeId", "data-v-e7c9664e"]]);
export {
  FlowToastContainer,
  addCustomToast,
  addErrorToast,
  addToast,
  useToasts
};
