{"version":3,"file":"getTimeToNextUpdate.test.js","names":["describe","it","expect","getTimeToNextUpdate","minTime","format","now","future","isFirstStep","to","equal","INFINITY","Date","nextStep","formatAs","be","undefined","should","test","getStepChangesAt","unit","prevStep","getTimeToStepChange"],"sources":["../../source/steps/getTimeToNextUpdate.test.js"],"sourcesContent":["import getTimeToNextUpdate, { INFINITY, getStepChangesAt, getTimeToStepChange } from './getTimeToNextUpdate.js'\r\n\r\ndescribe('getTimeToNextUpdate', () => {\r\n\tit('should return infinity when there are no more steps, and it does not format as a unit (past)', () => {\r\n\t\texpect(getTimeToNextUpdate(-4 * 60 * 1000, {\r\n\t\t\tminTime: 59.5,\r\n\t\t\tformat: () => ''\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true\r\n\t\t})).to.equal(INFINITY)\r\n\t})\r\n\r\n\tit('should support date argument', () => {\r\n\t\texpect(getTimeToNextUpdate(new Date(4 * 60 * 1000), {\r\n\t\t\tminTime: 60\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {}\r\n\t\t})).to.equal(3 * 60 * 1000 + 1)\r\n\t})\r\n\r\n\tit('should return this step\\'s \"minTime\" timestamp (future)', () => {\r\n\t\texpect(getTimeToNextUpdate(4 * 60 * 1000, {\r\n\t\t\tminTime: 60,\r\n\t\t\tformat: () => ''\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformat: () => ''\r\n\t\t\t}\r\n\t\t})).to.equal(3 * 60 * 1000 + 1)\r\n\t})\r\n\r\n\tit('should return undefined when there is a next step and time to next update can not be reliably determined (formatAs) (past)', () => {\r\n\t\texpect(getTimeToNextUpdate(-4 * 60 * 1000, {\r\n\t\t\tminTime: 60,\r\n\t\t\tformatAs: 'minute'\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformatAs: 'unknown-time-unit'\r\n\t\t\t}\r\n\t\t})).to.be.undefined\r\n\t})\r\n\r\n\tit('should get time to next update (no next step) (past)', () => {\r\n\t\tgetTimeToNextUpdate(-4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(0.5 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (no next step) (future)', () => {\r\n\t\tgetTimeToNextUpdate(4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(0.5 * 60 * 1000 + 1)\r\n\t})\r\n\r\n\tit('should get time to next update (has prev/next step without `minTime`) (future)', () => {\r\n\t\tgetTimeToNextUpdate(4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformatAs: 'hour',\r\n\t\t\t\ttest: () => false\r\n\t\t\t}\r\n\t\t}).should.equal(0.5 * 60 * 1000 + 1)\r\n\t})\r\n\r\n\tit('should get time to next update (has `getTimeToNextUpdate`) (past)', () => {\r\n\t\tgetTimeToNextUpdate(-4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5,\r\n\t\t\tgetTimeToNextUpdate: () => 0.25 * 60 * 1000\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(0.25 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (has `getTimeToNextUpdate`) (future)', () => {\r\n\t\tgetTimeToNextUpdate(4 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5,\r\n\t\t\tgetTimeToNextUpdate: () => 0.25 * 60 * 1000\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(0.25 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (has both unit and prev/next steps with `minTime`) (returns time to \"minTime\" of next step) (past)', () => {\r\n\t\tgetTimeToNextUpdate(-59 * 60 * 1000, {\r\n\t\t\tformatAs: 'minute',\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformatAs: 'hour',\r\n\t\t\t\tminTime: 59.5 * 60\r\n\t\t\t}\r\n\t\t}).should.equal(0.5 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (has no unit but has prev/next step with `minTime`) (returns time to \"minTime\" of next step) (past)', () => {\r\n\t\tgetTimeToNextUpdate(-59 * 60 * 1000, {\r\n\t\t\tformat: () => {},\r\n\t\t\tminTime: 59.5\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: true,\r\n\t\t\tnextStep: {\r\n\t\t\t\tformatAs: 'hour',\r\n\t\t\t\tminTime: 59.5 * 60\r\n\t\t\t}\r\n\t\t}).should.equal(0.5 * 60 * 1000)\r\n\t})\r\n\r\n\tit('should get time to next update (will be outside of the first step) (future)', () => {\r\n\t\tgetTimeToNextUpdate(60 * 60 * 1000, {\r\n\t\t\tformatAs: 'hour',\r\n\t\t\tminTime: 60 * 60\r\n\t\t}, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tisFirstStep: true\r\n\t\t}).should.equal(1)\r\n\t})\r\n})\r\n\r\ndescribe('getStepChangesAt', () => {\r\n\tit('should work for \"round\" steps', () => {\r\n\t\t// Future.\r\n\t\t// Is at zero point.\r\n\t\t// No next step.\r\n\t\t// No tickable unit.\r\n\t\t// Doesn't update.\r\n\t\tgetStepChangesAt({\r\n\t\t\tunit: 'now'\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(INFINITY)\r\n\r\n\t\t// Past.\r\n\t\t// Is at zero point.\r\n\t\t// The next step is seconds.\r\n\t\t// Updates at the next step.\r\n\t\tgetStepChangesAt({\r\n\t\t\tunit: 'second',\r\n\t\t\tminTime: 1\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: {}\r\n\t\t}).should.equal(1 * 1000)\r\n\r\n\t\t// Future.\r\n\t\t// Inside the first step.\r\n\t\t// Updates after zero point.\r\n\t\tgetStepChangesAt({\r\n\t\t\tunit: 'now'\r\n\t\t}, 0.9 * 1000, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(0.9 * 1000 + 1)\r\n\r\n\t\t// Future.\r\n\t\t// The first step doesn't start at 0.\r\n\t\t// Outside of the first step.\r\n\t\t// Updates right after zero point.\r\n\t\tgetTimeToStepChange(undefined, 0.9 * 1000, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(0.9 * 1000 + 1)\r\n\r\n\t\t// Past.\r\n\t\t// The current step is `undefined`.\r\n\t\t// The next step is the first step.\r\n\t\t// The first step doesn't start at 0.\r\n\t\t// Outside of the first step.\r\n\t\t// Updates at entering the first step.\r\n\t\tgetStepChangesAt({\r\n\t\t\tminTime: 1,\r\n\t\t\tunit: 'second'\r\n\t\t}, -0.9 * 1000, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: {}\r\n\t\t}).should.equal(0.1 * 1000)\r\n\r\n\t\t// Future.\r\n\t\t// The first step doesn't start at 0.\r\n\t\t// Will output empty string after it exits the current step.\r\n\t\tgetStepChangesAt({\r\n\t\t\tminTime: 1,\r\n\t\t\tunit: 'second'\r\n\t\t}, 1.1 * 1000, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(0.1 * 1000 + 1)\r\n\r\n\t\t// Past.\r\n\t\t// Next step is seconds.\r\n\t\t// The \"next\" step doesn't have `minTime`,\r\n\t\t// so \"time to next update\" couldn't be determined.\r\n\t\texpect(getStepChangesAt({\r\n\t\t\tunit: 'unknown-time-unit'\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: {}\r\n\t\t})).to.be.undefined\r\n\r\n\t\t// Past.\r\n\t\t// No next step.\r\n\t\t// The last step never changes.\r\n\t\tgetTimeToStepChange(undefined, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tisFirstStep: undefined\r\n\t\t}).should.equal(INFINITY)\r\n\r\n\t\t// Future.\r\n\t\t// Current step is seconds.\r\n\t\t// Updates after zero point.\r\n\t\tgetStepChangesAt({\r\n\t\t\tunit: 'second'\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: true,\r\n\t\t\tprevStep: undefined\r\n\t\t}).should.equal(1)\r\n\r\n\t\t// Past.\r\n\t\t// Next step is minutes.\r\n\t\t// Already at zero point, so no need to update at zero point.\r\n\t\tgetStepChangesAt({\r\n\t\t\tminTime: 60,\r\n\t\t\tformatAs: 'minute'\r\n\t\t}, 0, {\r\n\t\t\tnow: 0,\r\n\t\t\tfuture: false,\r\n\t\t\tprevStep: {}\r\n\t\t}).should.equal(60 * 1000)\r\n\t})\r\n})"],"mappings":"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"}