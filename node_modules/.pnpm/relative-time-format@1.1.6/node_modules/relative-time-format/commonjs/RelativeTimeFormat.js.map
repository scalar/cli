{"version":3,"file":"RelativeTimeFormat.js","names":["UNITS","NUMERIC_VALUES","STYLE_VALUES","LOCALE_MATCHER_VALUES","RelativeTimeFormat","locales","options","numeric","style","localeMatcher","undefined","indexOf","RangeError","push","getDefaultLocale","locale","supportedLocalesOf","Error","PluralRules","length","pluralRules","console","warn","Intl","NumberFormat","numberFormat","numberingSystem","resolvedOptions","resolveLocale","parseFormatArgs","arguments","number","unit","getRule","replace","formatNumber","Math","abs","rule","valueIndex","type","value","parts","slice","concat","formatNumberToParts","map","part","unitMessages","getLocaleData","message","current","pluralizedMessages","isNegative","quantifier","select","other","format","String","formatToParts","Array","isArray","TypeError","filter","addLocale","addLocaleData","setDefaultLocale","UNIT_ERROR","parseUnit","NUMBER_ERROR","parseNumber","Number","isFinite","isNegativeZero","Infinity","args"],"sources":["../source/RelativeTimeFormat.js"],"sourcesContent":["import {\r\n  getDefaultLocale,\r\n  setDefaultLocale,\r\n  getLocaleData,\r\n  addLocaleData\r\n} from './LocaleDataStore.js'\r\n\r\nimport resolveLocale from './resolveLocale.js'\r\nimport PluralRules from './PluralRules.js'\r\n// Importing `PluralRule` polyfill from a separate package\r\n// results in a bundle that is larger by 1kB for some reason.\r\n// import PluralRules from 'intl-plural-rules-polyfill/cardinal'\r\n\r\n// Valid time units.\r\nexport const UNITS = [\r\n  \"second\",\r\n  \"minute\",\r\n  \"hour\",\r\n  \"day\",\r\n  \"week\",\r\n  \"month\",\r\n  \"quarter\",\r\n  \"year\"\r\n]\r\n\r\n// Valid values for the `numeric` option.\r\nconst NUMERIC_VALUES = [\r\n  \"auto\",\r\n  \"always\"\r\n]\r\n\r\n// Valid values for the `style` option.\r\nconst STYLE_VALUES = [\r\n  \"long\",\r\n  \"short\",\r\n  \"narrow\"\r\n]\r\n\r\n// Valid values for the `localeMatcher` option.\r\nconst LOCALE_MATCHER_VALUES = [\r\n  \"lookup\",\r\n  \"best fit\"\r\n]\r\n\r\n/**\r\n * Polyfill for `Intl.RelativeTimeFormat` proposal.\r\n * https://github.com/tc39/proposal-intl-relative-time\r\n * https://github.com/tc39/proposal-intl-relative-time/issues/55\r\n */\r\nexport default class RelativeTimeFormat {\r\n  /**\r\n   * @param {(string|string[])} [locales] - Preferred locales (or locale).\r\n   * @param {Object} [options] - Formatting options.\r\n   * @param {string} [options.style=\"long\"] - One of: \"long\", \"short\", \"narrow\".\r\n   * @param {string} [options.numeric=\"always\"] - (Version >= 2) One of: \"always\", \"auto\".\r\n   * @param {string} [options.localeMatcher=\"lookup\"] - One of: \"lookup\", \"best fit\". Currently only \"lookup\" is supported.\r\n   */\r\n  constructor(locales = [], options = {}) {\r\n    const {\r\n      numeric,\r\n      style,\r\n      localeMatcher\r\n    } = options\r\n\r\n    this.numeric = \"always\"\r\n    this.style = \"long\"\r\n    this.localeMatcher = \"lookup\"\r\n\r\n    // Set `numeric` option.\r\n    if (numeric !== undefined) {\r\n      if (NUMERIC_VALUES.indexOf(numeric) < 0) {\r\n        throw new RangeError(`Invalid \"numeric\" option: ${numeric}`)\r\n      }\r\n      this.numeric = numeric\r\n    }\r\n\r\n    // Set `style` option.\r\n    if (style !== undefined) {\r\n      if (STYLE_VALUES.indexOf(style) < 0) {\r\n        throw new RangeError(`Invalid \"style\" option: ${style}`)\r\n      }\r\n      this.style = style\r\n    }\r\n\r\n    // Set `localeMatcher` option.\r\n    if (localeMatcher !== undefined) {\r\n      if (LOCALE_MATCHER_VALUES.indexOf(localeMatcher) < 0) {\r\n        throw new RangeError(`Invalid \"localeMatcher\" option: ${localeMatcher}`)\r\n      }\r\n      this.localeMatcher = localeMatcher\r\n    }\r\n\r\n    // Set `locale`.\r\n    // Convert `locales` to an array.\r\n    if (typeof locales === 'string') {\r\n      locales = [locales]\r\n    }\r\n    // Add default locale.\r\n    locales.push(getDefaultLocale())\r\n    // Choose the most appropriate locale.\r\n    this.locale = RelativeTimeFormat.supportedLocalesOf(locales, {\r\n      localeMatcher: this.localeMatcher\r\n    })[0]\r\n    if (!this.locale) {\r\n      throw new Error(\"No supported locale was found\")\r\n    }\r\n\r\n    // Construct an `Intl.PluralRules` instance (polyfill).\r\n    if (PluralRules.supportedLocalesOf(this.locale).length > 0) {\r\n      this.pluralRules = new PluralRules(this.locale)\r\n    } else {\r\n      console.warn(`\"${this.locale}\" locale is not supported`)\r\n    }\r\n\r\n    // Use `Intl.NumberFormat` for formatting numbers (when available).\r\n    if (typeof Intl !== 'undefined' && Intl.NumberFormat) {\r\n      this.numberFormat = new Intl.NumberFormat(this.locale)\r\n      this.numberingSystem = this.numberFormat.resolvedOptions().numberingSystem\r\n    } else {\r\n      this.numberingSystem = 'latn'\r\n    }\r\n\r\n    this.locale = resolveLocale(this.locale, {\r\n      localeMatcher: this.localeMatcher\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"2 days ago\"\r\n   * rtf.format(-2, \"day\")\r\n   * // Returns \"in 5 minutes\"\r\n   * rtf.format(5, \"minute\")\r\n   */\r\n  format() {\r\n    const [number, unit] = parseFormatArgs(arguments)\r\n    return this.getRule(number, unit).replace('{0}', this.formatNumber(Math.abs(number)))\r\n  }\r\n\r\n  /**\r\n   * Formats time `number` in `units` (either in past or in future).\r\n   * @param {number} number - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {Object[]} The parts (`{ type, value, unit? }`).\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Version 1 (deprecated).\r\n   * // Returns [\r\n   * //   { type: \"literal\", value: \"in \" },\r\n   * //   { type: \"day\", value: \"100\" },\r\n   * //   { type: \"literal\", value: \" days\" }\r\n   * // ]\r\n   * rtf.formatToParts(100, \"day\")\r\n   * //\r\n   * // Version 2.\r\n   * // Returns [\r\n   * //   { type: \"literal\", value: \"in \" },\r\n   * //   { type: \"integer\", value: \"100\", unit: \"day\" },\r\n   * //   { type: \"literal\", value: \" days\" }\r\n   * // ]\r\n   * rtf.formatToParts(100, \"day\")\r\n   */\r\n  formatToParts() {\r\n    const [number, unit] = parseFormatArgs(arguments)\r\n    const rule = this.getRule(number, unit)\r\n    const valueIndex = rule.indexOf(\"{0}\")\r\n    // \"yesterday\"/\"today\"/\"tomorrow\".\r\n    if (valueIndex < 0) {\r\n      return [{\r\n        type: \"literal\",\r\n        value: rule\r\n      }]\r\n    }\r\n    let parts = []\r\n    if (valueIndex > 0) {\r\n      parts.push({\r\n        type: \"literal\",\r\n        value: rule.slice(0, valueIndex)\r\n      })\r\n    }\r\n    parts = parts.concat(\r\n      this.formatNumberToParts(Math.abs(number))\r\n        .map(part => ({ ...part, unit }))\r\n    )\r\n    if (valueIndex + \"{0}\".length < rule.length - 1) {\r\n      parts.push({\r\n        type: \"literal\",\r\n        value: rule.slice(valueIndex + \"{0}\".length)\r\n      })\r\n    }\r\n    return parts\r\n  }\r\n\r\n  /**\r\n   * Returns formatting rule for `value` in `units` (either in past or in future).\r\n   * @param {number} value - Time interval value.\r\n   * @param {string} unit - Time interval measurement unit.\r\n   * @return {string}\r\n   * @throws {RangeError} If unit is not one of \"second\", \"minute\", \"hour\", \"day\", \"week\", \"month\", \"quarter\".\r\n   * @example\r\n   * // Returns \"{0} days ago\"\r\n   * getRule(-2, \"day\")\r\n   */\r\n  getRule(value, unit) {\r\n    // Get locale-specific time interval formatting rules\r\n    // of a given `style` for the given value of measurement `unit`.\r\n    //\r\n    // E.g.:\r\n    //\r\n    // ```json\r\n    // {\r\n    //  \"past\": {\r\n    //    \"one\": \"a second ago\",\r\n    //    \"other\": \"{0} seconds ago\"\r\n    //  },\r\n    //  \"future\": {\r\n    //    \"one\": \"in a second\",\r\n    //    \"other\": \"in {0} seconds\"\r\n    //  }\r\n    // }\r\n    // ```\r\n    //\r\n    const unitMessages = getLocaleData(this.locale)[this.style][unit]\r\n    // Bundle size optimization technique for styles like\r\n    // \"tiny\" in `javascript-time-ago`: \"1m\", \"2h\", \"3d\"...\r\n    if (typeof unitMessages === 'string') {\r\n      return unitMessages\r\n    }\r\n    // Special case for \"yesterday\"/\"today\"/\"tomorrow\".\r\n    if (this.numeric === \"auto\") {\r\n      // \"yesterday\", \"the day before yesterday\", etc.\r\n      if (value === -2 || value === -1) {\r\n        const message = unitMessages[`previous${value === -1 ? '' : '-' + Math.abs(value)}`]\r\n        if (message) {\r\n          return message\r\n        }\r\n      }\r\n      // \"tomorrow\", \"the day after tomorrow\", etc.\r\n      else if (value === 1 || value === 2) {\r\n        const message = unitMessages[`next${value === 1 ? '' : '-' + Math.abs(value)}`]\r\n        if (message) {\r\n          return message\r\n        }\r\n      }\r\n      // \"today\"\r\n      else if (value === 0) {\r\n        if (unitMessages.current) {\r\n          return unitMessages.current\r\n        }\r\n      }\r\n    }\r\n    // Choose either \"past\" or \"future\" based on time `value` sign.\r\n    // If there's only \"other\" then it's being collapsed.\r\n    // (the resulting bundle size optimization technique)\r\n    const pluralizedMessages = unitMessages[isNegative(value) ? \"past\" : \"future\"]\r\n    // Bundle size optimization technique for styles like \"narrow\"\r\n    // having messages like \"in {0} d.\" or \"{0} d. ago\".\r\n    if (typeof pluralizedMessages === \"string\") {\r\n      return pluralizedMessages\r\n    }\r\n    // Quantify `value`.\r\n    // There seems to be no such locale in CLDR\r\n    // for which \"plural rules\" function is missing.\r\n    const quantifier = this.pluralRules && this.pluralRules.select(Math.abs(value)) || 'other'\r\n    // \"other\" rule is supposed to be always present.\r\n    // If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n    return pluralizedMessages[quantifier] || pluralizedMessages.other\r\n  }\r\n\r\n  /**\r\n   * Formats a number into a string.\r\n   * Uses `Intl.NumberFormat` when available.\r\n   * @param  {number} number\r\n   * @return {string}\r\n   */\r\n  formatNumber(number) {\r\n    return this.numberFormat ? this.numberFormat.format(number) : String(number)\r\n  }\r\n\r\n  /**\r\n   * Formats a number into a list of parts.\r\n   * Uses `Intl.NumberFormat` when available.\r\n   * @param  {number} number\r\n   * @return {object[]}\r\n   */\r\n  formatNumberToParts(number) {\r\n    // `Intl.NumberFormat.formatToParts()` is not present, for example,\r\n    // in Node.js 8.x while `Intl.NumberFormat` itself is present.\r\n    return this.numberFormat && this.numberFormat.formatToParts ?\r\n      this.numberFormat.formatToParts(number) :\r\n      [{\r\n        type: \"integer\",\r\n        value: this.formatNumber(number)\r\n      }]\r\n  }\r\n\r\n  /**\r\n   * Returns a new object with properties reflecting the locale and date and time formatting options computed during initialization of this DateTimeFormat object.\r\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat/resolvedOptions\r\n   * @return {Object}\r\n   */\r\n  resolvedOptions() {\r\n    return {\r\n      locale: this.locale,\r\n      style: this.style,\r\n      numeric: this.numeric,\r\n      numberingSystem: this.numberingSystem\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns an array containing those of the provided locales\r\n * that are supported in collation without having to fall back\r\n * to the runtime's default locale.\r\n * @param {(string|string[])} locale - A string with a BCP 47 language tag, or an array of such strings. For the general form of the locales argument, see the Intl page.\r\n * @param {Object} [options] - An object that may have the following property:\r\n * @param {string} [options.localeMatcher=\"lookup\"] - The locale matching algorithm to use. Possible values are \"lookup\" and \"best fit\". Currently only \"lookup\" is supported.\r\n * @return {string[]} An array of strings representing a subset of the given locale tags that are supported in collation without having to fall back to the runtime's default locale.\r\n * @example\r\n * var locales = ['ban', 'id-u-co-pinyin', 'es-PY']\r\n * var options = { localeMatcher: 'lookup' }\r\n * // Returns [\"id\", \"es-PY\"]\r\n * Intl.RelativeTimeFormat.supportedLocalesOf(locales, options)\r\n */\r\nRelativeTimeFormat.supportedLocalesOf = function(locales, options = {}) {\r\n  // Convert `locales` to an array.\r\n  if (typeof locales === 'string') {\r\n    locales = [locales]\r\n  } else if (!Array.isArray(locales)) {\r\n    throw new TypeError('Invalid \"locales\" argument')\r\n  }\r\n  return locales.filter(locale => resolveLocale(locale, options))\r\n}\r\n\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\nRelativeTimeFormat.addLocale = addLocaleData\r\n\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\nRelativeTimeFormat.setDefaultLocale = setDefaultLocale\r\n\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\nRelativeTimeFormat.getDefaultLocale = getDefaultLocale\r\n\r\n/**\r\n * Export `Intl.PluralRules` just in case it's used somewhere else.\r\n */\r\nRelativeTimeFormat.PluralRules = PluralRules\r\n\r\n// The specification allows units to be in plural form.\r\n// Convert plural to singular.\r\n// Example: \"seconds\" -> \"second\".\r\nconst UNIT_ERROR = 'Invalid \"unit\" argument'\r\nfunction parseUnit(unit) {\r\n  if (typeof unit === 'symbol') {\r\n    throw new TypeError(UNIT_ERROR)\r\n  }\r\n  if (typeof unit !== 'string') {\r\n    throw new RangeError(`${UNIT_ERROR}: ${unit}`)\r\n  }\r\n  if (unit[unit.length - 1] === 's') {\r\n    unit = unit.slice(0, unit.length - 1)\r\n  }\r\n  if (UNITS.indexOf(unit) < 0) {\r\n    throw new RangeError(`${UNIT_ERROR}: ${unit}`)\r\n  }\r\n  return unit\r\n}\r\n\r\n// Converts `value` to a `Number`.\r\n// The specification allows value to be a non-number.\r\n// For example, \"-0\" is supposed to be treated as `-0`.\r\n// Also checks if `value` is a finite number.\r\nconst NUMBER_ERROR = 'Invalid \"number\" argument'\r\nfunction parseNumber(value) {\r\n  value = Number(value)\r\n  if (Number.isFinite) {\r\n    if (!Number.isFinite(value)) {\r\n      throw new RangeError(`${NUMBER_ERROR}: ${value}`)\r\n    }\r\n  }\r\n  return value\r\n}\r\n\r\n/**\r\n * Tells `0` from `-0`.\r\n * https://stackoverflow.com/questions/7223359/are-0-and-0-the-same\r\n * @param  {number} number\r\n * @return {Boolean}\r\n * @example\r\n * isNegativeZero(0); // false\r\n * isNegativeZero(-0); // true\r\n */\r\nfunction isNegativeZero(number) {\r\n  return 1 / number === -Infinity\r\n}\r\n\r\nfunction isNegative(number) {\r\n  return number < 0 || number === 0 && isNegativeZero(number)\r\n}\r\n\r\nfunction parseFormatArgs(args) {\r\n  if (args.length < 2) {\r\n    throw new TypeError(`\"unit\" argument is required`)\r\n  }\r\n  return [\r\n    parseNumber(args[0]),\r\n    parseUnit(args[1])\r\n  ]\r\n}"],"mappings":"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"}