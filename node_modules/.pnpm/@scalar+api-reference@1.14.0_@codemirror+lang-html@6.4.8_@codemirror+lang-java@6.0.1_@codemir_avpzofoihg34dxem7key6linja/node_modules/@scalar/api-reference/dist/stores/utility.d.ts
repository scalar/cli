/**
 * TODO: This is a copy of projects/web/src/stores/utility.ts
 */
export type KeyOfType<T, V> = keyof {
    [P in keyof T as T[P] extends V ? P : never]: any;
};
/** Generic set item for a given store state */
export declare function setItemFactory<State extends object>(state: State): <K extends keyof State>(key: K, value: State[K]) => void;
export declare function toggleItemFactory<State extends object>(state: State): (key: KeyOfType<State, boolean>) => void;
//# sourceMappingURL=utility.d.ts.map