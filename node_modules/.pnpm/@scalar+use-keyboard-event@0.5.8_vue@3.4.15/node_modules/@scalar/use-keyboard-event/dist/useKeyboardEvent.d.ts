import { type Ref } from 'vue';
/**
 * Add global or pseudo-global keyboard event handlers
 *
 * NOTES:
 * Event should be scoped as small as possibly. For example in a modal form the modal element should be
 * used as the reference element (not Document) because the handler will then be torn down with the element
 *
 * Handler prevents default. This may have unintended side effects.
 */
export declare function useKeyboardEvent({ element, keyList, handler, type, withShift, withCtrlCmd, withAlt, ignoreInputElements, active, }: {
    keyList: KeyboardEvent['key'][];
    withShift?: boolean;
    withCtrlCmd?: boolean;
    withAlt?: boolean;
    element?: Ref<HTMLElement | null>;
    handler: (e: KeyboardEvent) => void;
    type?: 'keydown' | 'keyup';
    ignoreInputElements?: boolean;
    active?: () => boolean;
}): {
    keyboardShortcut: {
        keyList: string[];
        withShift: boolean;
        withCtrlCmd: boolean;
        withAlt: boolean;
    };
};
//# sourceMappingURL=useKeyboardEvent.d.ts.map