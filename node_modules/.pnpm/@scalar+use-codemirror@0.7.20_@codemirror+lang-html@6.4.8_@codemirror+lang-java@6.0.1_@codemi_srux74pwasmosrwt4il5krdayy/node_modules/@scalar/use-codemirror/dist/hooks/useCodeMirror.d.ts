import { type Extension } from '@codemirror/state';
import { EditorView } from 'codemirror';
import { type Ref } from 'vue';
type UseCodeMirrorParameters = {
    /**
     * Some additional CodeMirror extensions.
     */
    extensions: Extension[];
    /**
     * Prefill the content. Will be ignored when a provider is given.
     */
    content?: string;
    /**
     * Whether to load a theme.
     */
    withoutTheme?: boolean;
};
export declare const useCodeMirror: (parameters: UseCodeMirrorParameters) => {
    value: Ref<string>;
    codeMirrorRef: Ref<HTMLDivElement | null>;
    codeMirror: Ref<EditorView | null>;
    setCodeMirrorContent: (content?: string) => void;
    reconfigureCodeMirror: (newExtensions: Extension[]) => void;
    restartCodeMirror: (newExtensions: Extension[]) => void;
};
export {};
//# sourceMappingURL=useCodeMirror.d.ts.map