{"version":3,"file":"TimeAgo.js","names":["UNITS","TimeAgo","locales","polyfill","locale","chooseLocale","concat","getDefaultLocale","getLocaleData","Intl","NumberFormat","numberFormat","IntlRelativeTimeFormat","RelativeTimeFormat","IntlPluralRules","PluralRules","RelativeTimeFormatPolyfill","relativeTimeFormatCache","Cache","pluralRulesCache","input","style","options","isStyle","undefined","defaultStyle","getStyleByName","timestamp","getTimestamp","getLabels","flavour","labels","labelsType","now","Date","secondsPassed","future","nowLabel","getNowLabel","custom","date","time","elapsed","units","getTimeIntervalMeasurementUnits","round","getStep","gradation","steps","getNextStep","prevStep","step","nextStep","formattedDate","formatDateForStep","getTimeToNextUpdate","timeToNextUpdate","format","formatAs","unit","value","formatValue","Error","JSON","stringify","amount","Math","abs","getStepDenominator","granularity","getRoundFunction","valueForFormatting","sign","getFormatter","getFormattingRule","replace","formatNumber","formattingRules","pastOrFuture","quantifierRules","quantifier","getPluralRules","select","other","number","String","get","put","map","localeData","_labelsType","defaultLocale","setDefaultLocale","addDefaultLocale","defaultLocaleHasBeenSpecified","console","error","addLocale","addLocaleData","addLabels","name","constructor","isMockedDate","getTime","object","allowedUnits","Object","keys","push","filter","indexOf","nowLabels","longLabels","past","second","current","variable","isStyleObject"],"sources":["../source/TimeAgo.js"],"sourcesContent":["import RelativeTimeFormatPolyfill from 'relative-time-format'\r\n\r\nimport Cache from './cache.js'\r\nimport chooseLocale from './locale.js'\r\nimport isStyleObject from './isStyleObject.js'\r\n\r\nimport getStep from './steps/getStep.js'\r\nimport getStepDenominator from './steps/getStepDenominator.js'\r\nimport getTimeToNextUpdate from './steps/getTimeToNextUpdate.js'\r\n\r\nimport {\r\n\taddLocaleData,\r\n\tgetLocaleData\r\n} from './LocaleDataStore.js'\r\n\r\nimport defaultStyle from './style/roundMinute.js'\r\nimport getStyleByName from './style/getStyleByName.js'\r\n\r\nimport { getRoundFunction } from './round.js'\r\n\r\n// Valid time units.\r\nconst UNITS = [\r\n\t'now',\r\n\t// The rest are the same as in `Intl.RelativeTimeFormat`.\r\n\t'second',\r\n\t'minute',\r\n\t'hour',\r\n\t'day',\r\n\t'week',\r\n\t'month',\r\n\t'quarter',\r\n\t'year'\r\n]\r\n\r\nexport default class TimeAgo {\r\n\t/**\r\n\t * @param {(string|string[])} locales=[] - Preferred locales (or locale).\r\n\t * @param {boolean} [polyfill] — Pass `false` to use native `Intl.RelativeTimeFormat` and `Intl.PluralRules` instead of the polyfills.\r\n\t */\r\n\tconstructor(locales = [], { polyfill } = {}) {\r\n\t\t// Convert `locales` to an array.\r\n\t\tif (typeof locales === 'string') {\r\n\t\t\tlocales = [locales]\r\n\t\t}\r\n\r\n\t\t// Choose the most appropriate locale\r\n\t\t// from the list of `locales` added by the user.\r\n\t\t// For example, new TimeAgo(\"en-US\") -> \"en\".\r\n\t\tthis.locale = chooseLocale(\r\n\t\t\tlocales.concat(TimeAgo.getDefaultLocale()),\r\n\t\t\tgetLocaleData\r\n\t\t)\r\n\r\n\t\tif (typeof Intl !== 'undefined') {\r\n\t\t\t// Use `Intl.NumberFormat` for formatting numbers (when available).\r\n\t\t\tif (Intl.NumberFormat) {\r\n\t\t\t\tthis.numberFormat = new Intl.NumberFormat(this.locale)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Some people have requested the ability to use native\r\n\t\t// `Intl.RelativeTimeFormat` and `Intl.PluralRules`\r\n\t\t// instead of the polyfills.\r\n\t\t// https://github.com/catamphetamine/javascript-time-ago/issues/21\r\n\t\tif (polyfill === false) {\r\n\t\t\tthis.IntlRelativeTimeFormat = Intl.RelativeTimeFormat\r\n\t\t\tthis.IntlPluralRules = Intl.PluralRules\r\n\t\t} else {\r\n\t\t\tthis.IntlRelativeTimeFormat = RelativeTimeFormatPolyfill\r\n\t\t\tthis.IntlPluralRules = RelativeTimeFormatPolyfill.PluralRules\r\n\t\t}\r\n\r\n\t\t// Cache `Intl.RelativeTimeFormat` instance.\r\n\t\tthis.relativeTimeFormatCache = new Cache()\r\n\r\n\t\t// Cache `Intl.PluralRules` instance.\r\n\t\tthis.pluralRulesCache = new Cache()\r\n\t}\r\n\r\n\t/**\r\n\t * Formats relative date/time.\r\n\t *\r\n\t * @param {(number|Date)} input — A `Date` or a javascript timestamp.\r\n\t *\r\n\t * @param {(string|object)} style — Date/time formatting style. Either one of the built-in style names or a \"custom\" style definition object having `steps: object[]` and `labels: string[]`.\r\n\t *\r\n\t * @param {number} [options.now] - Sets the current date timestamp.\r\n\t *\r\n\t * @param  {boolean} [options.future] — Tells how to format value `0`:\r\n\t *         as \"future\" (`true`) or \"past\" (`false`).\r\n\t *         Is `false` by default, but should have been `true` actually,\r\n\t *         in order to correspond to `Intl.RelativeTimeFormat`\r\n\t *         that uses `future` formatting for `0` unless `-0` is passed.\r\n\t *\r\n\t * @param {string} [options.round] — Rounding method. Overrides the style's one.\r\n\t *\r\n\t * @param {boolean} [options.getTimeToNextUpdate] — Pass `true` to return `[formattedDate, timeToNextUpdate]` instead of just `formattedDate`.\r\n\t *\r\n\t * @return {string} The formatted relative date/time. If no eligible `step` is found, then an empty string is returned.\r\n\t */\r\n\tformat(input, style, options) {\r\n\t\tif (!options) {\r\n\t\t\tif (style && !isStyle(style)) {\r\n\t\t\t\toptions = style\r\n\t\t\t\tstyle = undefined\r\n\t\t\t} else {\r\n\t\t\t\toptions = {}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!style) {\r\n\t\t\tstyle = defaultStyle\r\n\t\t}\r\n\r\n\t\tif (typeof style === 'string') {\r\n\t\t\tstyle = getStyleByName(style)\r\n\t\t}\r\n\r\n\t\tconst timestamp = getTimestamp(input)\r\n\r\n\t\t// Get locale messages for this type of labels.\r\n\t\t// \"flavour\" is a legacy name for \"labels\".\r\n\t\tconst { labels, labelsType } = this.getLabels(style.flavour || style.labels)\r\n\r\n\t\tlet now\r\n\t\t// Can pass a custom `now`, e.g. for testing purposes.\r\n\t\t//\r\n\t\t// Legacy way was passing `now` in `style`.\r\n\t\t// That way is deprecated.\r\n\t\tif (style.now !== undefined) {\r\n\t\t\tnow = style.now\r\n\t\t}\r\n\t\t// The new way is passing `now` option to `.format()`.\r\n\t\tif (now === undefined && options.now !== undefined) {\r\n\t\t\tnow = options.now\r\n\t\t}\r\n\t\tif (now === undefined) {\r\n\t\t\tnow = Date.now()\r\n\t\t}\r\n\r\n\t\t// how much time has passed (in seconds)\r\n\t\tconst secondsPassed = (now - timestamp) / 1000 // in seconds\r\n\r\n\t\tconst future = options.future || secondsPassed < 0\r\n\r\n\t\tconst nowLabel = getNowLabel(\r\n\t\t\tlabels,\r\n\t\t\tgetLocaleData(this.locale).now,\r\n\t\t\tgetLocaleData(this.locale).long,\r\n\t\t\tfuture\r\n\t\t)\r\n\r\n\t\t// `custom` – A function of `{ elapsed, time, date, now, locale }`.\r\n\t\t//\r\n\t\t// Looks like `custom` function is deprecated and will be removed\r\n\t\t// in the next major version.\r\n\t\t//\r\n\t\t// If this function returns a value, then the `.format()` call will return that value.\r\n\t\t// Otherwise the relative date/time is formatted as usual.\r\n\t\t// This feature is currently not used anywhere and is here\r\n\t\t// just for providing the ultimate customization point\r\n\t\t// in case anyone would ever need that. Prefer using\r\n\t\t// `steps[step].format(value, locale)` instead.\r\n\t\t//\r\n\t\tif (style.custom) {\r\n\t\t\tconst custom = style.custom({\r\n\t\t\t\tnow,\r\n\t\t\t\tdate: new Date(timestamp),\r\n\t\t\t\ttime: timestamp,\r\n\t\t\t\telapsed: secondsPassed,\r\n\t\t\t\tlocale: this.locale\r\n\t\t\t})\r\n\t\t\tif (custom !== undefined) {\r\n\t\t\t\t// Won't return `timeToNextUpdate` here\r\n\t\t\t\t// because `custom()` seems deprecated.\r\n\t\t\t\treturn custom\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Get the list of available time interval units.\r\n\t\tconst units = getTimeIntervalMeasurementUnits(\r\n\t\t\t// Controlling `style.steps` through `style.units` seems to be deprecated:\r\n\t\t\t// create a new custom `style` instead.\r\n\t\t\tstyle.units,\r\n\t\t\tlabels,\r\n\t\t\tnowLabel\r\n\t\t)\r\n\r\n\t\t// // If no available time unit is suitable, just output an empty string.\r\n\t\t// if (units.length === 0) {\r\n\t\t// \tconsole.error(`None of the \"${units.join(', ')}\" time units have been found in \"${labelsType}\" labels for \"${this.locale}\" locale.`)\r\n\t\t// \treturn ''\r\n\t\t// }\r\n\r\n\t\tconst round = options.round || style.round\r\n\r\n\t\t// Choose the appropriate time measurement unit\r\n\t\t// and get the corresponding rounded time amount.\r\n\t\tconst [prevStep, step, nextStep] = getStep(\r\n\t\t\t// \"gradation\" is a legacy name for \"steps\".\r\n\t\t\t// For historical reasons, \"approximate\" steps are used by default.\r\n\t\t\t// In the next major version, there'll be no default for `steps`.\r\n\t\t\tstyle.gradation || style.steps || defaultStyle.steps,\r\n\t\t\tsecondsPassed,\r\n\t\t\t{ now, units, round, future, getNextStep: true }\r\n\t\t)\r\n\r\n\t\tconst formattedDate = this.formatDateForStep(timestamp, step, secondsPassed, {\r\n\t\t\tlabels,\r\n\t\t\tlabelsType,\r\n\t\t\tnowLabel,\r\n\t\t\tnow,\r\n\t\t\tfuture,\r\n\t\t\tround\r\n\t\t}) || ''\r\n\r\n\t\tif (options.getTimeToNextUpdate) {\r\n\t\t\tconst timeToNextUpdate = getTimeToNextUpdate(timestamp, step, {\r\n\t\t\t\tnextStep,\r\n\t\t\t\tprevStep,\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture,\r\n\t\t\t\tround\r\n\t\t\t})\r\n\t\t\treturn [formattedDate, timeToNextUpdate]\r\n\t\t}\r\n\r\n\t\treturn formattedDate\r\n\t}\r\n\r\n\tformatDateForStep(timestamp, step, secondsPassed, {\r\n\t\tlabels,\r\n\t\tlabelsType,\r\n\t\tnowLabel,\r\n\t\tnow,\r\n\t\tfuture,\r\n\t\tround\r\n\t}) {\r\n\t\t// If no step matches, then output an empty string.\r\n\t\tif (!step) {\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\tif (step.format) {\r\n\t\t\treturn step.format(timestamp, this.locale, {\r\n\t\t\t\tformatAs: (unit, value) => {\r\n\t\t\t\t\t// Mimicks `Intl.RelativeTimeFormat.format()`.\r\n\t\t\t\t\treturn this.formatValue(value, unit, {\r\n\t\t\t\t\t\tlabels,\r\n\t\t\t\t\t\tfuture\r\n\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\tnow,\r\n\t\t\t\tfuture\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\t// \"unit\" is now called \"formatAs\".\r\n\t\tconst unit = step.unit || step.formatAs\r\n\r\n\t\tif (!unit) {\r\n\t\t\tthrow new Error(`[javascript-time-ago] Each step must define either \\`formatAs\\` or \\`format()\\`. Step: ${JSON.stringify(step)}`)\r\n\t\t}\r\n\r\n\t\t// `Intl.RelativeTimeFormat` doesn't operate in \"now\" units.\r\n\t\t// Therefore, threat \"now\" as a special case.\r\n\t\tif (unit === 'now') {\r\n\t\t\treturn nowLabel\r\n\t\t}\r\n\r\n\t\t// Amount in units.\r\n\t\tlet amount = Math.abs(secondsPassed) / getStepDenominator(step)\r\n\r\n\t\t// Apply granularity to the time amount\r\n\t\t// (and fallback to the previous step\r\n\t\t//  if the first level of granularity\r\n\t\t//  isn't met by this amount)\r\n\t\t//\r\n\t\t// `granularity` — (advanced) Time interval value \"granularity\".\r\n\t\t// For example, it could be set to `5` for minutes to allow only 5-minute increments\r\n\t\t// when formatting time intervals: `0 minutes`, `5 minutes`, `10 minutes`, etc.\r\n\t\t// Perhaps this feature will be removed because there seem to be no use cases\r\n\t\t// of it in the real world.\r\n\t\t//\r\n\t\tif (step.granularity) {\r\n\t\t\t// Recalculate the amount of seconds passed based on granularity\r\n\t\t\tamount = getRoundFunction(round)(amount / step.granularity) * step.granularity\r\n\t\t}\r\n\r\n\t\tlet valueForFormatting = -1 * Math.sign(secondsPassed) * getRoundFunction(round)(amount)\r\n\r\n\t\t// By default, this library formats a `0` in \"past\" mode,\r\n\t\t// unless `future: true` option is passed.\r\n\t\t// This is different to `relative-time-format`'s behavior\r\n\t\t// which formats a `0` in \"future\" mode by default, unless it's a `-0`.\r\n\t\t// So, convert `0` to `-0` if `future: true` option wasn't passed.\r\n\t\t// `=== 0` matches both `0` and `-0`.\r\n\t\tif (valueForFormatting === 0) {\r\n\t\t\tif (future) {\r\n\t\t\t\tvalueForFormatting = 0\r\n\t\t\t} else {\r\n\t\t\t\tvalueForFormatting = -0\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tswitch (labelsType) {\r\n\t\t\tcase 'long':\r\n\t\t\tcase 'short':\r\n\t\t\tcase 'narrow':\r\n\t\t\t\t// Format the amount using `Intl.RelativeTimeFormat`.\r\n\t\t\t\treturn this.getFormatter(labelsType).format(valueForFormatting, unit)\r\n\t\t\tdefault:\r\n\t\t\t\t// Format the amount.\r\n\t\t\t\t// (mimicks `Intl.RelativeTimeFormat` behavior for other time label styles)\r\n\t\t\t\treturn this.formatValue(valueForFormatting, unit, {\r\n\t\t\t\t\tlabels,\r\n\t\t\t\t\tfuture\r\n\t\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Mimicks what `Intl.RelativeTimeFormat` does for additional locale styles.\r\n\t * @param  {number} value\r\n\t * @param  {string} unit\r\n\t * @param  {object} options.labels — Relative time labels.\r\n\t * @param  {boolean} [options.future] — Tells how to format value `0`: as \"future\" (`true`) or \"past\" (`false`). Is `false` by default, but should have been `true` actually.\r\n\t * @return {string}\r\n\t */\r\n\tformatValue(value, unit, { labels, future }) {\r\n\t\treturn this.getFormattingRule(labels, unit, value, { future })\r\n\t\t\t.replace('{0}', this.formatNumber(Math.abs(value)))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns formatting rule for `value` in `units` (either in past or in future).\r\n\t * @param {object} formattingRules — Relative time labels for different units.\r\n\t * @param {string} unit - Time interval measurement unit.\r\n\t * @param {number} value - Time interval value.\r\n\t * @param  {boolean} [options.future] — Tells how to format value `0`: as \"future\" (`true`) or \"past\" (`false`). Is `false` by default.\r\n\t * @return {string}\r\n\t * @example\r\n\t * // Returns \"{0} days ago\"\r\n\t * getFormattingRule(en.long, \"day\", -2, 'en')\r\n\t */\r\n\tgetFormattingRule(formattingRules, unit, value, { future }) {\r\n\t\t// Passing the language is required in order to\r\n\t\t// be able to correctly classify the `value` as a number.\r\n\t\tconst locale = this.locale\r\n\t\tformattingRules = formattingRules[unit]\r\n\t\t// Check for a special \"compacted\" rules case:\r\n\t\t// if formatting rules are the same for \"past\" and \"future\",\r\n\t\t// and also for all possible `value`s, then those rules are\r\n\t\t// stored as a single string.\r\n\t\tif (typeof formattingRules === 'string') {\r\n\t\t\treturn formattingRules\r\n\t\t}\r\n\t\t// Choose either \"past\" or \"future\" based on time `value` sign.\r\n\t\t// If \"past\" is same as \"future\" then they're stored as \"other\".\r\n\t\t// If there's only \"other\" then it's being collapsed.\r\n\t\tconst pastOrFuture = value === 0 ? (future ? 'future' : 'past') : (value < 0 ? 'past' : 'future')\r\n\t\tconst quantifierRules = formattingRules[pastOrFuture] || formattingRules\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof quantifierRules === 'string') {\r\n\t\t\treturn quantifierRules\r\n\t\t}\r\n\t\t// Quantify `value`.\r\n\t\tconst quantifier = this.getPluralRules().select(Math.abs(value))\r\n\t\t// \"other\" rule is supposed to always be present.\r\n\t\t// If only \"other\" rule is present then \"rules\" is not an object and is a string.\r\n\t\treturn quantifierRules[quantifier] || quantifierRules.other\r\n\t}\r\n\r\n\t/**\r\n\t * Formats a number into a string.\r\n\t * Uses `Intl.NumberFormat` when available.\r\n\t * @param  {number} number\r\n\t * @return {string}\r\n\t */\r\n\tformatNumber(number) {\r\n\t\treturn this.numberFormat ? this.numberFormat.format(number) : String(number)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `Intl.RelativeTimeFormat` for a given `labelsType`.\r\n\t * @param {string} labelsType\r\n\t * @return {object} `Intl.RelativeTimeFormat` instance\r\n\t */\r\n\tgetFormatter(labelsType) {\r\n\t\t// `Intl.RelativeTimeFormat` instance creation is (hypothetically) assumed\r\n\t\t// a lengthy operation so the instances are cached and reused.\r\n\t\treturn this.relativeTimeFormatCache.get(this.locale, labelsType) ||\r\n\t\t\tthis.relativeTimeFormatCache.put(this.locale, labelsType, new this.IntlRelativeTimeFormat(this.locale, { style: labelsType }))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an `Intl.PluralRules` instance.\r\n\t * @return {object} `Intl.PluralRules` instance\r\n\t */\r\n\tgetPluralRules() {\r\n\t\t// `Intl.PluralRules` instance creation is (hypothetically) assumed\r\n\t\t// a lengthy operation so the instances are cached and reused.\r\n\t\treturn this.pluralRulesCache.get(this.locale) ||\r\n\t\t\tthis.pluralRulesCache.put(this.locale, new this.IntlPluralRules(this.locale))\r\n\t}\r\n\r\n\r\n\t/**\r\n\t * Gets localized labels for this type of labels.\r\n\t *\r\n\t * @param {(string|string[])} labelsType - Relative date/time labels type.\r\n\t *                                     If it's an array then all label types are tried\r\n\t *                                     until a suitable one is found.\r\n\t *\r\n\t * @returns {Object} Returns an object of shape { labelsType, labels }\r\n\t */\r\n\tgetLabels(labelsType = []) {\r\n\t\t// Convert `labels` to an array.\r\n\t\tif (typeof labelsType === 'string') {\r\n\t\t\tlabelsType = [labelsType]\r\n\t\t}\r\n\r\n\t\t// Supports legacy \"tiny\" and \"mini-time\" label styles.\r\n\t\tlabelsType = labelsType.map((labelsType) => {\r\n\t\t\tswitch (labelsType) {\r\n\t\t\t\tcase 'tiny':\r\n\t\t\t\tcase 'mini-time':\r\n\t\t\t\t\treturn 'mini'\r\n\t\t\t\tdefault:\r\n\t\t\t\t\treturn labelsType\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t// \"long\" labels type is the default one.\r\n\t\t// (it's always present for all languages)\r\n\t\tlabelsType = labelsType.concat('long')\r\n\r\n\t\t// Find a suitable labels type.\r\n\t\tconst localeData = getLocaleData(this.locale)\r\n\t\tfor (const _labelsType of labelsType) {\r\n\t\t\tif (localeData[_labelsType]) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tlabelsType: _labelsType,\r\n\t\t\t\t\tlabels: localeData[_labelsType]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Default locale global variable.\r\n */\r\nlet defaultLocale = 'en'\r\n\r\n/**\r\n * Gets default locale.\r\n * @return  {string} locale\r\n */\r\nTimeAgo.getDefaultLocale = () => defaultLocale\r\n\r\n/**\r\n * Sets default locale.\r\n * @param  {string} locale\r\n */\r\nTimeAgo.setDefaultLocale = (locale) => defaultLocale = locale\r\n\r\n/**\r\n * Adds locale data for a specific locale and marks the locale as default.\r\n * @param {Object} localeData\r\n */\r\nTimeAgo.addDefaultLocale = function(localeData) {\r\n\tif (defaultLocaleHasBeenSpecified) {\r\n\t\treturn console.error('[javascript-time-ago] `TimeAgo.addDefaultLocale()` can only be called once. To add other locales, use `TimeAgo.addLocale()`.')\r\n\t}\r\n\tdefaultLocaleHasBeenSpecified = true\r\n\tTimeAgo.setDefaultLocale(localeData.locale)\r\n\tTimeAgo.addLocale(localeData)\r\n}\r\n\r\nlet defaultLocaleHasBeenSpecified\r\n\r\n/**\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n */\r\nTimeAgo.addLocale = function(localeData) {\r\n\taddLocaleData(localeData)\r\n\tRelativeTimeFormatPolyfill.addLocale(localeData)\r\n}\r\n\r\n/**\r\n * (legacy alias)\r\n * Adds locale data for a specific locale.\r\n * @param {Object} localeData\r\n * @deprecated\r\n */\r\nTimeAgo.locale = TimeAgo.addLocale\r\n\r\n/**\r\n * Adds custom labels to locale data.\r\n * @param {string} locale\r\n * @param {string} name\r\n * @param {object} labels\r\n */\r\nTimeAgo.addLabels = (locale, name, labels) => {\r\n\tlet localeData = getLocaleData(locale)\r\n\tif (!localeData) {\r\n\t\taddLocaleData({\r\n\t\t\tlocale\r\n\t\t})\r\n\t\tlocaleData = getLocaleData(locale)\r\n\t\t// throw new Error(`[javascript-time-ago] No data for locale \"${locale}\"`)\r\n\t}\r\n\tlocaleData[name] = labels\r\n}\r\n\r\n// Normalizes `.format()` `time` argument.\r\nfunction getTimestamp(input) {\r\n\tif (input.constructor === Date || isMockedDate(input)) {\r\n\t\treturn input.getTime()\r\n\t}\r\n\r\n\tif (typeof input === 'number') {\r\n\t\treturn input\r\n\t}\r\n\r\n\t// For some weird reason istanbul doesn't see this `throw` covered.\r\n\t/* istanbul ignore next */\r\n\tthrow new Error(`Unsupported relative time formatter input: ${typeof input}, ${input}`)\r\n}\r\n\r\n// During testing via some testing libraries `Date`s aren't actually `Date`s.\r\n// https://github.com/catamphetamine/javascript-time-ago/issues/22\r\nfunction isMockedDate(object) {\r\n\treturn typeof object === 'object' && typeof object.getTime === 'function'\r\n}\r\n\r\n// Get available time interval measurement units.\r\nfunction getTimeIntervalMeasurementUnits(allowedUnits, labels, nowLabel) {\r\n\t// Get all time interval measurement units that're available\r\n\t// in locale data for a given time labels style.\r\n\tlet units = Object.keys(labels)\r\n\r\n\t// `now` unit is handled separately and is shipped in its own `now.json` file.\r\n\t// `now.json` isn't present for all locales, so it could be substituted with\r\n\t// \".second.current\".\r\n\t// Add `now` unit if it's available in locale data.\r\n\tif (nowLabel) {\r\n\t\tunits.push('now')\r\n\t}\r\n\r\n\t// If only a specific set of available time measurement units can be used\r\n\t// then only those units are allowed (if they're present in locale data).\r\n\tif (allowedUnits) {\r\n\t\tunits = allowedUnits.filter(unit => unit === 'now' || units.indexOf(unit) >= 0)\r\n\t}\r\n\r\n\treturn units\r\n}\r\n\r\nfunction getNowLabel(labels, nowLabels, longLabels, future) {\r\n\tconst nowLabel = labels.now || (nowLabels && nowLabels.now)\r\n\t// Specific \"now\" message form extended locale data (if present).\r\n\tif (nowLabel) {\r\n\t\t// Bundle size optimization technique.\r\n\t\tif (typeof nowLabel === 'string') {\r\n\t\t\treturn nowLabel\r\n\t\t}\r\n\t\t// Not handling `value === 0` as `localeData.now.current` here\r\n\t\t// because it wouldn't make sense: \"now\" is a moment,\r\n\t\t// so one can't possibly differentiate between a\r\n\t\t// \"previous\" moment, a \"current\" moment and a \"next moment\".\r\n\t\t// It can only be differentiated between \"past\" and \"future\".\r\n\t\tif (future) {\r\n\t\t\treturn nowLabel.future\r\n\t\t} else {\r\n\t\t\treturn nowLabel.past\r\n\t\t}\r\n\t}\r\n\t// Use \".second.current\" as \"now\" message.\r\n\tif (longLabels && longLabels.second && longLabels.second.current) {\r\n\t\treturn longLabels.second.current\r\n\t}\r\n}\r\n\r\nfunction isStyle(variable) {\r\n\treturn typeof variable === 'string' || isStyleObject(variable)\r\n}"],"mappings":"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"}